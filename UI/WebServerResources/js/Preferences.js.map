{"version":3,"sources":["Preferences/Preferences.app.js","Preferences/AccountDialogController.js","Preferences/FiltersDialogController.js","Preferences/PreferencesController.js"],"names":["configure","$stateProvider","$urlRouterProvider","state","abstract","views","preferences","templateUrl","controller","controllerAs","resolve","statePreferences","url","module","otherwise","Preferences","runBlock","$rootScope","$on","event","current","previous","rejection","console","error","angular","config","run","$inject","AccountDialogController","$mdDialog","defaults","account","accountId","mailCustomFromEnabled","customFromIsReadonly","cancel","save","hide","vm","this","FiltersDialogController","$scope","$window","filter","mailboxes","labels","form","addMailFilterRule","rules","push","field","operator","removeMailFilterRule","index","splice","addMailFilterAction","actions","method","removeMailFilterAction","sieveCapabilities","forwardEnabled","vacationEnabled","fieldLabels","subject","l","from","to","cc","to_or_cc","size","header","indexOf","body","methodLabels","discard","keep","stop","redirect","vacation","reject","fileinto","addflag","numberOperatorLabels","under","over","textOperatorLabels","is","is_not","contains","contains_not","matches","matches_not","regex","regex_not","flagLabels","seen","deleted","answered","flagged","junk","not_junk","PreferencesController","$q","$state","$mdMedia","$mdSidenav","$mdToast","focus","Dialog","User","Account","Authentication","go","$valid","close","onLanguageChange","confirm","ok","then","quick","location","reload","addCalendarCategory","SOGoCalendarCategoriesColors","SOGoCalendarCategories","length","$setDirty","removeCalendarCategory","key","addContactCategory","SOGoContactsCategories","removeContactCategory","addMailAccount","ev","AuxiliaryMailAccounts","_","last","name","identities","fullName","email","receipts","receiptAction","receiptNonRecipientAction","receiptOutsideDomainAction","receiptAnyAction","show","targetEvent","locals","window","editMailAccount","removeMailAccount","addMailLabel","guid","SOGoMailLabelsColors","removeMailLabel","addMailFilter","match","SOGoSieveFilters","editMailFilter","copy","removeMailFilter","addDefaultEmailAddresses","v","isDefined","Vacation","autoReplyEmailAddresses","split","union","defaultEmailAddresses","join","confirmChanges","$event","target","$dirty","preventDefault","stopPropagation","tagName","parentNode","href","options","i","sendForm","addresses","defaultAddresses","domains","domain","forwardConstraints","Forward","enabled","forwardAddress","forEach","adr","toLowerCase","alert","$save","data","simple","content","position","hideDelay","$setPristine","canChangePassword","passwords","newPassword","newPasswordConfirmation","changePassword","title","undefined","msg","timeZonesListFilter","timeZonesList","value","toUpperCase","userFilter","$filter","timeZonesSearchText","id","$getMailboxes","allMailboxes","$flattenMailboxes","all","ready","SOGoAlternateAvatar","$alternateAvatar"],"mappings":"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","file":"Preferences.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoPreferences */\n\n(function() {\n  'use strict';\n\n  angular.module('SOGo.PreferencesUI', ['ui.router', 'ck', 'SOGo.Common', 'SOGo.MailerUI', 'SOGo.ContactsUI', 'SOGo.Authentication', 'ng-sortable'])\n    .config(configure)\n    .run(runBlock);\n\n  /**\n   * @ngInject\n   */\n  configure.$inject = ['$stateProvider', '$urlRouterProvider'];\n  function configure($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('preferences', {\n        abstract: true,\n        views: {\n          preferences: {\n            templateUrl: 'preferences.html',\n            controller: 'PreferencesController',\n            controllerAs: 'app'\n          }\n        },\n        resolve: {\n          statePreferences: statePreferences\n        }\n      })\n      .state('preferences.general', {\n        url: '/general',\n        views: {\n          module: {\n            templateUrl: 'generalPreferences.html'\n          }\n        }\n      })\n      .state('preferences.calendars', {\n        url: '/calendars',\n        views: {\n          module: {\n            templateUrl: 'calendarsPreferences.html'\n          }\n        }\n      })\n      .state('preferences.addressbooks', {\n        url: '/addressbooks',\n        views: {\n          module: {\n            templateUrl: 'addressbooksPreferences.html'\n          }\n        }\n      })\n      .state('preferences.mailer', {\n        url: '/mailer',\n        views: {\n          module: {\n            templateUrl: 'mailerPreferences.html'\n          }\n        }\n      });\n\n    // if none of the above states are matched, use this as the fallback\n    $urlRouterProvider.otherwise('/general');\n  }\n\n  /**\n   * @ngInject\n   */\n  statePreferences.$inject = ['Preferences'];\n  function statePreferences(Preferences) {\n    return Preferences;\n  }\n\n  /**\n   * @ngInject\n   */\n  runBlock.$inject = ['$rootScope'];\n  function runBlock($rootScope) {\n    $rootScope.$on('$routeChangeError', function(event, current, previous, rejection) {\n      console.error(event, current, previous, rejection);\n    });\n  }\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoPreferences */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  AccountDialogController.$inject = ['$mdDialog', 'defaults', 'account', 'accountId', 'mailCustomFromEnabled'];\n  function AccountDialogController($mdDialog, defaults, account, accountId, mailCustomFromEnabled) {\n    var vm = this;\n\n    vm.defaults = defaults;\n    vm.account = account;\n    vm.accountId = accountId;\n    vm.customFromIsReadonly = customFromIsReadonly;\n    vm.cancel = cancel;\n    vm.save = save;\n\n    function customFromIsReadonly() {\n      if (accountId > 0)\n        return false;\n\n      return !mailCustomFromEnabled;\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n\n    function save() {\n      $mdDialog.hide();\n    }\n  }\n\n  angular\n    .module('SOGo.PreferencesUI')\n    .controller('AccountDialogController', AccountDialogController);\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoPreferences */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  FiltersDialogController.$inject = ['$scope', '$window', '$mdDialog', 'filter', 'mailboxes', 'labels'];\n  function FiltersDialogController($scope, $window, $mdDialog, filter, mailboxes, labels) {\n    var vm = this,\n        sieveCapabilities = $window.sieveCapabilities,\n        forwardEnabled = $window.forwardEnabled,\n        vacationEnabled = $window.vacationEnabled;\n\n    vm.filter = filter;\n    vm.mailboxes = mailboxes;\n    vm.labels = labels;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.addMailFilterRule = addMailFilterRule;\n    vm.removeMailFilterRule = removeMailFilterRule;\n    vm.addMailFilterAction = addMailFilterAction;\n    vm.removeMailFilterAction = removeMailFilterAction;\n\n    vm.fieldLabels = {\n      \"subject\": l(\"Subject\"),\n      \"from\": l(\"From\"),\n      \"to\": l(\"To\"),\n      \"cc\": l(\"Cc\"),\n      \"to_or_cc\": l(\"To or Cc\"),\n      \"size\": l(\"Size (Kb)\"),\n      \"header\": l(\"Header\")\n    };\n\n    if (sieveCapabilities.indexOf(\"body\") > -1)\n      vm.fieldLabels.body = l(\"Body\");\n\n    vm.methodLabels = {\n      \"discard\": l(\"Discard the message\"),\n      \"keep\": l(\"Keep the message\"),\n      \"stop\": l(\"Stop processing filter rules\")\n    };\n\n    if (forwardEnabled)\n      vm.methodLabels.redirect = l(\"Forward the message to\");\n\n    if (vacationEnabled)\n      vm.methodLabels.vacation = l(\"Send a vacation message\");\n\n    if (sieveCapabilities.indexOf(\"reject\") > -1)\n      vm.methodLabels.reject = l(\"Send a reject message\");\n\n    if (sieveCapabilities.indexOf(\"fileinto\") > -1)\n      vm.methodLabels.fileinto = l(\"File the message in\");\n\n    if (sieveCapabilities.indexOf(\"imapflags\") > -1 || sieveCapabilities.indexOf(\"imap4flags\") > -1)\n      vm.methodLabels.addflag = l(\"Flag the message with\");\n\n    vm.numberOperatorLabels = {\n      \"under\": l(\"is under\"),\n      \"over\": l(\"is over\")\n    };\n\n    vm.textOperatorLabels = {\n      \"is\": l(\"is\"),\n      \"is_not\": l(\"is not\"),\n      \"contains\": l(\"contains\"),\n      \"contains_not\": l(\"does not contain\"),\n      \"matches\": l(\"matches\"),\n      \"matches_not\": l(\"does not match\")\n    };\n\n    if (sieveCapabilities.indexOf(\"regex\") > -1) {\n      vm.textOperatorLabels.regex = l(\"matches regex\");\n      vm.textOperatorLabels.regex_not = l(\"does not match regex\");\n    }\n\n    vm.flagLabels = {\n      \"seen\": l(\"Seen\"),\n      \"deleted\": l(\"Deleted\"),\n      \"answered\": l(\"Answered\"),\n      \"flagged\": l(\"Flagged\"),\n      \"junk\": l(\"Junk\"),\n      \"not_junk\": l(\"Not Junk\")\n    };\n    \n    function cancel() {\n      $mdDialog.cancel();\n    }\n    \n    function save(form) {\n      $mdDialog.hide();\n    }\n    \n    function addMailFilterRule(event) {\n      if (!vm.filter.rules)\n        vm.filter.rules = [];\n\n      vm.filter.rules.push({ field: 'subject', operator: 'contains' });\n    }\n    \n    function removeMailFilterRule(index) {\n      vm.filter.rules.splice(index, 1);\n    }\n    \n    function addMailFilterAction(event) {\n      if (!vm.filter.actions)\n        vm.filter.actions = [];\n\n      vm.filter.actions.push({ method: 'discard' });\n    }\n    \n    function removeMailFilterAction(index) {\n      vm.filter.actions.splice(index, 1);\n    }\n  }\n\n  angular\n    .module('SOGo.PreferencesUI')\n    .controller('FiltersDialogController', FiltersDialogController);\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* JavaScript for SOGoPreferences */\n\n(function() {\n  'use strict';\n  \n  /**\n   * @ngInject\n   */\n  PreferencesController.$inject = ['$q', '$window', '$state', '$mdMedia', '$mdSidenav', '$mdDialog', '$mdToast', 'sgFocus', 'Dialog', 'User', 'Account', 'statePreferences', 'Authentication'];\n  function PreferencesController($q, $window, $state, $mdMedia, $mdSidenav, $mdDialog, $mdToast, focus, Dialog, User, Account, statePreferences, Authentication) {\n    var vm = this, account, mailboxes = [];\n\n    vm.preferences = statePreferences;\n    vm.passwords = { newPassword: null, newPasswordConfirmation: null };\n\n    vm.go = go;\n    vm.onLanguageChange = onLanguageChange;\n    vm.addCalendarCategory = addCalendarCategory;\n    vm.removeCalendarCategory = removeCalendarCategory;\n    vm.addContactCategory = addContactCategory;\n    vm.removeContactCategory = removeContactCategory;\n    vm.addMailAccount = addMailAccount;\n    vm.editMailAccount = editMailAccount;\n    vm.removeMailAccount = removeMailAccount;\n    vm.addMailLabel = addMailLabel;\n    vm.removeMailLabel = removeMailLabel;\n    vm.addMailFilter = addMailFilter;\n    vm.editMailFilter = editMailFilter;\n    vm.removeMailFilter = removeMailFilter;\n    vm.addDefaultEmailAddresses = addDefaultEmailAddresses;\n    vm.userFilter = User.$filter;\n    vm.confirmChanges = confirmChanges;\n    vm.save = save;\n    vm.canChangePassword = canChangePassword;\n    vm.changePassword = changePassword;\n    vm.timeZonesList = window.timeZonesList;\n    vm.timeZonesListFilter = timeZonesListFilter;\n    vm.timeZonesSearchText = '';\n\n    // Fetch a flatten version of the mailboxes list of the main account (0)\n    // This list will be forwarded to the Sieve filter controller\n    account = new Account({ id: 0 });\n    account.$getMailboxes().then(function() {\n      var allMailboxes = account.$flattenMailboxes({all: true}),\n          index = -1,\n          length = allMailboxes.length;\n      while (++index < length) {\n        mailboxes.push(allMailboxes[index]);\n      }\n    });\n\n    // Set alternate avatar in User service\n    statePreferences.ready().then(function() {\n      if (statePreferences.defaults.SOGoAlternateAvatar)\n        User.$alternateAvatar = statePreferences.defaults.SOGoAlternateAvatar;\n    });\n\n    function go(module, form) {\n      if (form.$valid) {\n        // Close sidenav on small devices\n        if ($mdMedia('xs'))\n          $mdSidenav('left').close();\n        $state.go('preferences.' + module);\n      }\n    }\n\n    function onLanguageChange(form) {\n      Dialog.confirm(l('Warning'),\n                     l('Save preferences and reload page now?'),\n                     {ok: l('Yes'), cancel: l('No')})\n        .then(function() {\n          save(form, { quick: true }).then(function() {\n            $window.location.reload(true);\n          });\n        });\n    }\n\n    function addCalendarCategory(form) {\n      vm.preferences.defaults.SOGoCalendarCategoriesColors[\"New category\"] = \"#aaa\";\n      vm.preferences.defaults.SOGoCalendarCategories.push(\"New category\");\n      focus('calendarCategory_' + (vm.preferences.defaults.SOGoCalendarCategories.length - 1));\n      form.$setDirty();\n    }\n\n    function removeCalendarCategory(index, form) {\n      var key = vm.preferences.defaults.SOGoCalendarCategories[index];\n      vm.preferences.defaults.SOGoCalendarCategories.splice(index, 1);\n      delete vm.preferences.defaults.SOGoCalendarCategoriesColors[key];\n      form.$setDirty();\n    }\n\n    function addContactCategory(form) {\n      vm.preferences.defaults.SOGoContactsCategories.push(\"\");\n      focus('contactCategory_' + (vm.preferences.defaults.SOGoContactsCategories.length - 1));\n      form.$setDirty();\n    }\n\n    function removeContactCategory(index, form) {\n      vm.preferences.defaults.SOGoContactsCategories.splice(index, 1);\n      form.$setDirty();\n    }\n\n    function addMailAccount(ev, form) {\n      var account;\n\n      vm.preferences.defaults.AuxiliaryMailAccounts.push({});\n\n      account = _.last(vm.preferences.defaults.AuxiliaryMailAccounts);\n      account.name = l(\"New account\");\n      account.identities = [\n        {\n          fullName: \"\",\n          email: \"\"\n        }\n      ];\n      account.receipts = {\n        receiptAction: \"ignore\",\n        receiptNonRecipientAction: \"ignore\",\n        receiptOutsideDomainAction: \"ignore\",\n        receiptAnyAction: \"ignore\"\n      };\n\n      $mdDialog.show({\n        controller: 'AccountDialogController',\n        controllerAs: '$AccountDialogController',\n        templateUrl: 'editAccount?account=new',\n        targetEvent: ev,\n        locals: {\n          defaults: vm.preferences.defaults,\n          account: account,\n          accountId: (vm.preferences.defaults.AuxiliaryMailAccounts.length-1),\n          mailCustomFromEnabled: window.mailCustomFromEnabled\n        }\n      }).then(function() {\n        form.$setDirty();\n      });\n    }\n\n    function editMailAccount(event, index, form) {\n      var account = vm.preferences.defaults.AuxiliaryMailAccounts[index];\n      $mdDialog.show({\n        controller: 'AccountDialogController',\n        controllerAs: '$AccountDialogController',\n        templateUrl: 'editAccount?account=' + index,\n        targetEvent: event,\n        locals: {\n          defaults: vm.preferences.defaults,\n          account: account,\n          accountId: index,\n          mailCustomFromEnabled: window.mailCustomFromEnabled\n        }\n      }).then(function() {\n        vm.preferences.defaults.AuxiliaryMailAccounts[index] = account;\n        form.$setDirty();\n      });\n    }\n\n    function removeMailAccount(index, form) {\n      vm.preferences.defaults.AuxiliaryMailAccounts.splice(index, 1);\n      form.$setDirty();\n    }\n    \n    function addMailLabel(form) {\n      // See $omit() in the Preferences services for real key generation\n      var key = '_$$' + guid();\n      vm.preferences.defaults.SOGoMailLabelsColors[key] =  [\"New label\", \"#aaa\"];\n      form.$setDirty();\n    }\n\n    function removeMailLabel(key, form) {\n      delete vm.preferences.defaults.SOGoMailLabelsColors[key];\n      form.$setDirty();\n    }\n\n    function addMailFilter(ev, form) {\n      var filter = { match: 'all' };\n\n      $mdDialog.show({\n        templateUrl: 'editFilter?filter=new',\n        controller: 'FiltersDialogController',\n        controllerAs: 'filterEditor',\n        targetEvent: ev,\n        locals: {\n          filter: filter,\n          mailboxes: mailboxes,\n          labels: vm.preferences.defaults.SOGoMailLabelsColors\n        }\n      }).then(function() {\n        if (!vm.preferences.defaults.SOGoSieveFilters)\n          vm.preferences.defaults.SOGoSieveFilters = [];\n        vm.preferences.defaults.SOGoSieveFilters.push(filter);\n        form.$setDirty();\n      });\n    }\n    \n    function editMailFilter(ev, index, form) {\n      var filter = angular.copy(vm.preferences.defaults.SOGoSieveFilters[index]);\n      \n      $mdDialog.show({\n        templateUrl: 'editFilter?filter=' + index,\n        controller: 'FiltersDialogController',\n        controllerAs: 'filterEditor',\n        targetEvent: null,\n        locals: {\n          filter: filter,\n          mailboxes: mailboxes,\n          labels: vm.preferences.defaults.SOGoMailLabelsColors\n        }\n      }).then(function() {\n        vm.preferences.defaults.SOGoSieveFilters[index] = filter;\n        form.$setDirty();\n      });\n    }\n\n    function removeMailFilter(index, form) {\n      vm.preferences.defaults.SOGoSieveFilters.splice(index, 1);\n      form.$setDirty();\n    }\n\n    function addDefaultEmailAddresses(form) {\n      var v = [];\n\n      if (angular.isDefined(vm.preferences.defaults.Vacation.autoReplyEmailAddresses)) {\n        v = vm.preferences.defaults.Vacation.autoReplyEmailAddresses.split(',');\n      }\n\n      vm.preferences.defaults.Vacation.autoReplyEmailAddresses = (_.union(window.defaultEmailAddresses.split(','), v)).join(',');\n      form.$setDirty();\n    }\n\n    function confirmChanges($event, form) {\n      var target;\n\n      if (form.$dirty) {\n        // Stop default action\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        // Find target link\n        target = $event.target;\n        while (target.tagName != 'A')\n          target = target.parentNode;\n\n        Dialog.confirm(l('Unsaved Changes'),\n                       l('Do you want to save your changes made to the configuration?'),\n                       { ok: l('Save'), cancel: l('Don\\'t Save') })\n        .then(function() {\n          // Save & follow link\n          save(form, { quick: true }).then(function() {\n            $window.location = target.href;\n          });\n        }, function() {\n          // Don't save & follow link\n          $window.location = target.href;\n        });\n      }\n    }\n\n    function save(form, options) {\n      var i, sendForm, addresses, defaultAddresses, domains, domain;\n\n      sendForm = true;\n      domains = [];\n\n      // We do some sanity checks\n      if (window.forwardConstraints > 0 &&\n          angular.isDefined(vm.preferences.defaults.Forward) &&\n          vm.preferences.defaults.Forward.enabled &&\n          angular.isDefined(vm.preferences.defaults.Forward.forwardAddress)) {\n\n        addresses = vm.preferences.defaults.Forward.forwardAddress.split(\",\");\n\n        // We first extract the list of 'known domains' to SOGo\n        defaultAddresses = window.defaultEmailAddresses.split(/, */);\n\n        _.forEach(defaultAddresses, function(adr) {\n          var domain = adr.split(\"@\")[1];\n          if (domain) {\n            domains.push(domain.toLowerCase());\n          }\n        });\n\n        // We check if we're allowed or not to forward based on the domain defaults\n        for (i = 0; i < addresses.length && sendForm; i++) {\n          domain = addresses[i].split(\"@\")[1].toLowerCase();\n          if (domains.indexOf(domain) < 0 && window.forwardConstraints == 1) {\n            Dialog.alert(l('Error'), l(\"You are not allowed to forward your messages to an external email address.\"));\n            sendForm = false;\n          }\n          else if (domains.indexOf(domain) >= 0 && window.forwardConstraints == 2) {\n            Dialog.alert(l('Error'), l(\"You are not allowed to forward your messages to an internal email address.\"));\n            sendForm = false;\n          }\n        }\n      }\n\n      if (sendForm)\n        return vm.preferences.$save().then(function(data) {\n          if (!options || !options.quick) {\n            $mdToast.show(\n              $mdToast.simple()\n                .content(l('Preferences saved'))\n                .position('bottom right')\n                .hideDelay(2000));\n            form.$setPristine();\n          }\n        });\n\n      return $q.reject();\n    }\n\n    function canChangePassword() {\n      if (vm.passwords.newPassword && vm.passwords.newPassword.length > 0 &&\n          vm.passwords.newPasswordConfirmation && vm.passwords.newPasswordConfirmation.length &&\n          vm.passwords.newPassword == vm.passwords.newPasswordConfirmation)\n        return true;\n\n      return false;\n    }\n    \n    function changePassword() {\n      Authentication.changePassword(vm.passwords.newPassword).then(function() {\n        var alert = $mdDialog.alert({\n          title: l('Password'),\n          content: l('The password was changed successfully.'),\n          ok: l('OK')\n        });\n        $mdDialog.show( alert )\n          .finally(function() {\n            alert = undefined;\n          });\n      }, function(msg) {\n        var alert = $mdDialog.alert({\n          title: l('Password'),\n          content: msg,\n          ok: l('OK')\n        });\n        $mdDialog.show( alert )\n          .finally(function() {\n            alert = undefined;\n          });\n      });\n    }\n\n    function timeZonesListFilter(filter) {\n      return _.filter(vm.timeZonesList, function(value) {\n        return value.toUpperCase().indexOf(filter.toUpperCase()) >= 0;\n      });\n    }\n  }\n\n  angular\n    .module('SOGo.PreferencesUI')\n    .controller('PreferencesController', PreferencesController);\n\n})();\n"]}