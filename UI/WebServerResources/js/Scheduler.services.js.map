{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCalendarTable.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgDroppableBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","$reloadAll","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","calendarData","group","$get","$getIndex","$subscribe","uid","path","userResource","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","classification","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","sendAppointmentNotifications","SOGoAppointmentSendEMailNotifications","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","expandable","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","partstat","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","element","currentTarget","attr","go","changeView","deregisterCalendarsList","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","sortable_setData","dataTransfer","dragEl","clearData","sortable_onEnd","toggleSortableMode","sortableCalendars","disabled","sortableSubscriptions","sortableWebCalendars","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","today","fragments","location","hash","state","service","animation","draggable","handle","ghostClass","chosenClass","setData","onEnd","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","$cards","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","clickBlock","replace","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","scrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","isMultiColumn","viewType","attributes","getElementsByTagName","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","onDragStart","updateFromPointerHandler","onDragEnd","off","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","deregisterDragStop","sgCalendarTable","blocksType","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","setHours","sgDroppableBlock","onDrop","deregister"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,   // hour quarters\n      EventDragHorizontalOffset: 3  // pixels\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id')).then(function() {\n          // Refresh list of calendars to fetch links associated to new calendar\n          Calendar.$reloadAll();\n        });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Reload the list of known calendars.\n   */\n  Calendar.$reloadAll = function() {\n    var _this = this;\n\n    Calendar.$$resource.fetch('calendarslist').then(function(data) {\n      _.forEach(data.calendars, function(calendarData) {\n        var group, calendar;\n\n        if (calendarData.isWebCalendar)\n          group = _this.$webcalendars;\n        else if (calendarData.isSubscription)\n          group = _this.$subscriptions;\n        else\n          group = _this.$calendars;\n\n        calendar = _.find(group, function(o) { return o.id == calendarData.id; });\n        if (calendar)\n          calendar.init(calendarData);\n      });\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default values\n      Component.$Preferences.ready().then(function() {\n        var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n        // Set default classification\n        _this.classification = Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n\n        // Set default alarm\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n\n        // Set notitifications\n        _this.sendAppointmentNotifications = Component.$Preferences.defaults.SOGoAppointmentSendEMailNotifications;\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList({expandable: true})) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              partstat: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          partstat: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, type, baseComponent) {\n      var component;\n\n      if (baseComponent) {\n        component = baseComponent;\n      }\n      else {\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, 'appointment', component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      disabled: true,\n      animation: 150,\n      draggable: 'md-list-item',\n      handle: '.md-menu',\n      ghostClass: 'sg-sortable-ghost',\n      chosenClass: 'sg-sortable-chosen',\n      setData: sortable_setData,\n      onEnd: sortable_onEnd\n    };\n    vm.sortableSubscriptions = angular.copy(vm.sortableCalendars);\n    vm.sortableWebCalendars = angular.copy(vm.sortableCalendars);\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    function sortable_setData(dataTransfer, dragEl) {\n      dataTransfer.clearData();\n    }\n\n    function sortable_onEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableCalendars.disabled = !vm.sortableCalendars.disabled;\n      vm.sortableSubscriptions.disabled = !vm.sortableSubscriptions.disabled;\n      vm.sortableWebCalendars.disabled = !vm.sortableWebCalendars.disabled;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch(function() { return vm.calendar.color; }, function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre ng-bind-html=\"data\"></pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController,\n          locals: { data: data }\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog', 'data'];\n        function ComponentRawSourceDialogController(scope, $mdDialog, data) {\n          scope.data = data;\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = false;\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, scrollView, type, lastScroll, days, deregisterDragStart, deregisterDragStop;\n\n        view = null;\n        scrollView = element[0];\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        lastScroll = 0;\n        days = null;\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          element.off('mouseover', updateFromPointerHandler);\n          angular.element($window).off('resize', updateCoordinates);\n        });\n\n        function initView() {\n          var quarterHeight;\n\n          // Quarter height doesn't change if window is resize; compute it only once\n          quarterHeight = getQuarterHeight();\n\n          view = {\n            type: type,\n            quarterHeight: quarterHeight,\n            scrollStep: 6 * quarterHeight,\n            dayNumbers: getDayNumbers(),\n            maxX: getMaxColumns(),\n\n            // Expose a reference of the view element\n            element: scrollView\n          };\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', updateCoordinates);\n          updateCoordinates();\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * quarterHeight;\n                scrollView.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function getQuarterHeight() {\n          var hour0, hour23, height = null;\n\n          hour0 = document.getElementById('hour0');\n          hour23 = document.getElementById('hour23');\n          if (hour0 && hour23)\n            height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n          return height;\n        }\n\n        function getDayDimensions(viewLeft) {\n          var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n          height = width = leftOffset = topOffset = 0;\n          nodes = scrollView.getElementsByClassName('day');\n\n          if (nodes.length > 0) {\n            domRect = nodes[0].getBoundingClientRect();\n            height = domRect.height;\n            width = domRect.width;\n            leftOffset = domRect.left - viewLeft;\n            tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n            if (tileHeader.length > 0)\n              topOffset = tileHeader[0].clientHeight;\n          }\n\n          return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n        }\n\n        function getDayNumbers() {\n          var viewType = null, isMultiColumn, days, total, sum;\n\n          if (scrollView.attributes['sg-view'])\n            viewType = scrollView.attributes['sg-view'].value;\n          isMultiColumn = (viewType == 'multicolumndayview');\n          days = scrollView.getElementsByTagName('sg-calendar-day');\n\n          return _.map(days, function(element, index) {\n            if (isMultiColumn)\n              return index;\n            else\n              return parseInt(element.attributes['sg-day-number'].value);\n          });\n        }\n\n        function getMaxColumns() {\n          var mdGridList, max = 0;\n\n          if (type == 'monthly') {\n            mdGridList = scrollView.getElementsByTagName('md-grid-list')[0];\n            max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n          }\n          else {\n            max = scrollView.getElementsByClassName('day').length - 1;\n          }\n\n          return max;\n        }\n\n        // View has been resized;\n        // Compute the view's origins (x, y), a day's dimensions and left margin.\n        function updateCoordinates() {\n          var domRect, dayDimensions;\n\n          domRect = scrollView.getBoundingClientRect();\n          dayDimensions = getDayDimensions(domRect.left);\n\n          angular.extend(view, {\n            coordinates: {\n              x: domRect.left,\n              y: domRect.top\n            },\n            dayHeight: dayDimensions.height,\n            dayWidth: dayDimensions.width,\n            daysOffset: dayDimensions.offset.left,\n            topOffset: dayDimensions.offset.top\n          });\n        }\n\n        function onDragStart() {\n          element.on('mouseover', updateFromPointerHandler);\n          updateFromPointerHandler();\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        // From SOGoScrollController.updateFromPointerHandler\n        function updateFromPointerHandler() {\n          var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n          pointerHandler = Component.$ghost.pointerHandler;\n          if (view && pointerHandler) {\n            scrollStep = view.scrollStep;\n            pointerCoordinates = pointerHandler.getContainerBasedCoordinates(view);\n\n            if (pointerCoordinates) {\n              // Pointer is inside view; Adjust scrollbar if necessary\n              Calendar.$view = view;\n              now = new Date().getTime();\n              if (!lastScroll || now > lastScroll + 100) {\n                lastScroll = now;\n                scrollY = pointerCoordinates.y - scrollStep;\n                if (scrollY < 0) {\n                  minY = -scrollView.scrollTop;\n                  if (scrollY < minY)\n                    scrollY = minY;\n                  scrollView.scrollTop += scrollY;\n                }\n                else {\n                  scrollY = pointerCoordinates.y + scrollStep;\n                  delta = scrollY - scrollView.clientHeight;\n                  if (delta > 0) {\n                    scrollView.scrollTop += delta;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarDayBlockGhost\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        calendars: '=sgCalendars',\n        calendar: '@sgCalendar',\n        blocksType: '@sgBlocksType',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-table',\n        '  sg-blocks=\"calendars[calendar][blocksType]\"',\n        '  sg-day=\"day\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarTable', sgCalendarTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   http://www.html5rocks.com/en/tutorials/dnd/basics/\n   https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_and_drop\n\n   <sg-calendar-day-table\n   sg-blocks=\"calendar.blocks\"\n   sg-day=\"20150330\"\n   sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  sgDroppableBlock.$inject = ['$rootScope', '$timeout', '$mdGesture', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDroppableBlock($rootScope, $timeout, $mdGesture, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      scope: {\n        onDrop: '&sgOnDrop'\n      },\n      link: function (scope, element, attrs, controller) {\n        var deregister = $rootScope.$on('calendar:dragend', scope.onDrop);\n        scope.$on('$destroy', deregister);\n      }\n    };\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDroppableBlock', sgDroppableBlock);\n})();\n\n"]}