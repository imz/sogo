{"version":3,"sources":["Scheduler/Calendar.service.js","Scheduler/Component.service.js","Scheduler/CalendarController.js","Scheduler/CalendarListController.js","Scheduler/CalendarsController.js","Scheduler/ComponentController.js","Scheduler/sgCalendarDay.directive.js","Scheduler/sgCalendarDayBlock.directive.js","Scheduler/sgCalendarDayTable.directive.js","Scheduler/sgCalendarGhost.directive.js","Scheduler/sgCalendarMonthDay.directive.js","Scheduler/sgCalendarMonthEvent.directive.js","Scheduler/sgCalendarScrollView.directive.js","Scheduler/sgCalendarTable.directive.js","Scheduler/sgCategoryStylesheet.directive.js","Scheduler/sgDraggableCalendarBlock.directive.js","Scheduler/sgDroppableBlock.directive.js"],"names":["Calendar","futureCalendarData","this","init","name","id","newCalendarData","$$resource","create","$unwrap","$factory","$q","$timeout","$log","Settings","Resource","Preferences","Component","Acl","angular","extend","activeUser","$Preferences","$Component","$$Acl","$view","module","e","value","EventDragDayLength","EventDragHorizontalOffset","factory","$defaultCalendar","calendar","defaultCalendar","defaults","SOGoDefaultCalendar","_","find","$findAll","active","$add","list","sibling","i","isWebCalendar","$webcalendars","isSubscription","$subscriptions","$calendars","o","localeCompare","indexOf","map","splice","ready","then","settings","FoldersOrder","saveFoldersOrder","flatMap","data","writable","_this","forEach","push","isUndefined","fetch","calendars","union","filter","isOwned","acls","objectCreator","$get","$getIndex","$subscribe","uid","path","userResource","calendarData","$addWebCalendar","url","d","defer","urls","webCalendarURL","reject","post","isEditable","isRemote","owner","login","debug","JSON","stringify","undefined","resolve","response","status","promise","reloadWebCalendars","promises","$error","l","statusText","all","$deleteComponents","components","component","isDefined","pid","uids","folders","prototype","color","$acl","isSuperUser","$shadowData","$omit","$id","when","$futureCalendarData","getClassName","base","$rename","$save","$delete","remove","$reset","key","save","error","setCredentials","username","password","download","type","$setActivation","$getComponent","componentId","recurrenceId","$find","isError","isObject","futureComponentData","newComponentData","newguid","isNew","Card","Gravatar","$Card","$gravatar","timeFormat","$query","search","$queryEvents","sort","asc","filterpopup","$queryTasks","$refreshTimeout","$ghost","EventsFilterState","TasksFilterState","EventsSortingState","parseInt","TasksSortingState","show_completed","ShowCompletedTasks","$categories","SOGoCalendarCategoriesColors","SOGoTimeFormat","$selectedCount","count","$events","event","selected","length","$tasks","task","$startRefreshTimeout","cancel","refreshViewCheck","SOGoRefreshViewCheck","f","bind","$filter","timeInterval","options","now","Date","day","getDate","month","getMonth","year","getFullYear","queryKey","capitalize","params","otherType","dirty","keys","$unwrapCollection","calendarId","occurrenceId","join","filterCategories","query","re","RegExp","category","saveSelectedList","componentType","$eventsBlocksForView","view","date","firstDayOfWeek","viewAction","startDate","endDate","SOGoFirstDayOfWeek","beginOfWeek","setTime","getTime","addDays","setDate","setMonth","endOfWeek","$eventsBlocks","j","dayDates","dayNumbers","deferred","toLowerCase","sd","getDayString","ed","views","reduceComponent","associateComponent","objects","eventData","componentData","zipObject","eventsFields","start","c_startdate","hour","getHourString","blocks","categories","block","nbr","$views","viewIndex","viewData","allDayBlocks","reduce","events","flatten","days","dayIndex","dayNumber","calendarName","fields","invokeMap","$resetGhost","pointerHandler","startHour","endHour","$parseDate","dateString","time","substring","split","no_time","repeat","alarm","action","quantity","unit","reference","relation","delta","classification","isString","setMinutes","Math","round","getMinutes","end","minutesTo","setDelta","dueDate","due","completedDate","completed","c_category","$isRecurrent","byDayMask","occurrence","frequency","byday","toString","interval","monthdays","months","until","$hasCustomRepeat","hasCustomRepeat","units","M","H","D","W","match","exec","SOGoCalendarDefaultReminder","$hasAlarm","destinationCalendar","updateFreeBusy","b","isReadOnly","isEditableOccurrence","isInvitation","userHasRSVP","isInvitationOccurrence","enablePercentComplete","coversFreeBusy","quarter","freebusy","updateFreeBusyCoverage","roundedStart","roundedEnd","startQuarter","endQuarter","daysUpTo","index","hourKey","currentDay","dayKey","getHours","beginOfDay","addMinutes","attendees","attendee","image","email","updateFreeBusyAttendee","sday","eday","c_folder","addAttendee","card","$isList","isGroup","container","c_name","listId","refs","ref","c_cn","$preferredEmail","role","c_uid","hasAttendee","emails","deleteAttendee","findIndex","currentAttendee","canRemindAttendeesByEmail","addAttachUrl","attachUrl","attachUrls","deleteAttachUrl","$addDueDate","toISOString","$deleteDueDate","$addStartDate","$deleteStartDate","$reply","reply","delegatedTo","$adjust","every","values","v","extraAttributes","dlp","$mdDateLocaleProvider","format","startTime","endTime","dueTime","stringWithSeparator","organizer","occurrenceOnly","$futureComponentData","copy","repeatDescription","localizedString","toUpperCase","alarmDescription","copyTo","destination","moveTo","CalendarController","$scope","$rootScope","$state","$stateParams","stateEventsBlocks","toggleAllDays","expandedAllDays","vm","updateView","asDate","changeDate","$event","element","currentTarget","attr","go","changeView","deregisterCalendarsList","$on","$inject","controller","CalendarListController","$mdDialog","Dialog","selectComponentType","reload","unselectComponents","mode","multiple","selectAll","toggleComponentSelection","preventDefault","stopPropagation","confirmDeleteSelectedComponents","confirm","ok","$emit","openEvent","openComponent","openTask","viewable","templateUrl","show","parent","document","body","targetEvent","clickOutsideToClose","escapeToClose","controllerAs","locals","stateComponent","newComponent","baseComponent","updateComponentFromGhost","RecurrentComponentDialogController","updateThisOccurrence","hide","onComponentAdjustError","updateAllOccurrences","message","AttendeeConflictDialogController","conflictError","ignoreConflicts","coordinates","calendarNumber","activeCalendars","currentEventCoordinates","summary","isAllDay","duration","getDelta","originalEventCoordinates","originalCalendar","isException","template","filteredBy","field","sortedBy","cancelSearch","selectedList","SelectedList","CalendarsController","$window","$mdToast","FileUploader","focus","User","stateCalendars","sortable_setData","dataTransfer","dragEl","clearData","sortable_onEnd","toggleSortableMode","sortableCalendars","disabled","sortableSubscriptions","sortableWebCalendars","resetSort","newCalendar","ev","prompt","UserLogin","addWebCalendar","WebCalendarAuthDialogController","scope","parts","hostname","title","formatted","authenticate","form","$valid","required","reason","$setValidity","inputType","confirmDelete","folder","alert","importCalendar","CalendarImportDialogController","filterByExtension","item","isTextFile","test","position","hideDelay","uploader","ApplicationBaseURL","autoUpload","queueLimit","filters","fn","onSuccessItem","headers","msg","imported","simple","content","onErrorItem","close","showOnly","showAll","showLinks","LinksDialogController","showProperties","PropertiesDialogController","srcCalendar","saveProperties","$watch","editFolder","editMode","revertEditing","renameFolder","share","$users","usersWithACL","users","subscribeToFolder","today","fragments","location","hash","state","service","animation","draggable","handle","ghostClass","chosenClass","setData","onEnd","SOGoCalendarCategories","asCSSIdentifier","pick","newList","oldList","commonList","ids","intersectionBy","oldObject","isEqual","ComponentController","AddressBook","Alarm","Account","cardFilter","$filterAll","$cards","newMessageWithAllRecipients","recipients","_newMessage","newMessageWithRecipient","accounts","account","$getMailboxes","mailboxes","$newMessage","editable","to","subject","stateAccount","stateMessage","edit","editAllOccurrences","c","getAlarms","replyAllOccurrences","deleteOccurrence","deleteAllOccurrences","toggleRawSource","ComponentRawSourceDialogController","copySelectedComponent","moveSelectedComponent","calendarService","ComponentEditorController","toggleRecurrenceEditor","showRecurrenceEditor","toggleAttendeesEditor","showAttendeesEditor","isValidEmail","searchText","removeAttendee","priorityLevel","priority","attendeeConflictError","getDays","hours","addStartDate","oldStartDate","addDueDate","oldDueDate","updateStartTime","adjustStartTime","valueOf","oldEndDate","updateEndTime","adjustEndTime","updateDueTime","adjustDueTime","attendeesEditor","sgCalendarDay","restrict","dayString","sgCalendarDayController","directive","sgCalendarDayBlock","CalendarSettings","tElem","tAttrs","p","has","link","iElement","attrs","pc","left","right","siblings","css","c_isallday","addClass","userState","c_isopaque","clickBlock","replace","sgCalendarDayTable","sgCalendarGhost","ctrls","initGhost","calendarDayCtrl","originalCalendarNumber","hideGhost","forEachRight","domElement","classList","removeClass","updateGhost","showGhost","isRelative","wasOtherBlock","durationLeft","maxDuration","enableTransition","scrollViewCtrl","getStartTime","quarterHeight","topOffset","getEndTime","quartersToHM","quarters","minutes","mins","floor","deregisterDragStart","deregisterDrag","deregisterDragEnd","require","sgCalendarMonthDay","sgCalendarMonthEvent","sgCalendarScrollView","$document","$mdGesture","sgCalendarScrollViewController","initView","getQuarterHeight","scrollStep","getDayNumbers","maxX","getMaxColumns","scrollView","on","updateCoordinates","hourCell","quartersOffset","SOGoDayStartTime","getElementById","scrollTop","offsetTop","hour0","hour23","height","getDayDimensions","viewLeft","width","leftOffset","nodes","domRect","tileHeader","getElementsByClassName","getBoundingClientRect","clientHeight","offset","top","isMultiColumn","viewType","attributes","getElementsByTagName","mdGridList","max","dayDimensions","x","y","dayHeight","dayWidth","daysOffset","onDragStart","updateFromPointerHandler","onDragEnd","off","pointerCoordinates","scrollY","minY","getContainerBasedCoordinates","lastScroll","deregisterDragStop","sgCalendarTable","blocksType","sgCategoryStylesheet","ngModel","sgDraggableCalendarBlock","initGrips","blockIndex","isFirstBlock","isLastBlock","dragGrip","leftGrip","rightGrip","topGrip","bottomGrip","parentNode","tagName","append","clone","onDragDetect","dragMode","target","className","SOGoEventDragPointerHandler","initFromEvent","one","onDrag","dragStart","eventType","isHourCell","isMonthly","newData","hasClass","parseDate","dragging","prepareWithEventType","initFromBlock","initFromCalendar","updateFromEvent","pointer","dragHasStarted","SOGoCoordinates","SOGoEventDragEventCoordinates","setEventType","otherCoordinates","getDistance","sqrt","weekDay","prevDayNumber","sumBy","currentDayNumber","_quartersToHM","originalCoordinates","currentCoordinates","originalViewCoordinates","currentViewCoordinates","getEventViewCoordinates","pageX","pageY","newEventCoordinates","setTimeFromQuarters","updateEventCoordinates","distance","newDuration","deltaQuarters","deltaDays","ceil","clientWidth","methods","multiday","getEventMultiDayViewCoordinates","multiday-allday","getEventMultiDayAllDayViewCoordinates","monthly","getEventMonthlyViewCoordinates","unknown","method","pxCoordinates","maxY","minX","daysTopOffset","daysY","setHours","sgDroppableBlock","onDrop","deregister"],"mappings":"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","file":"Scheduler.services.js","sourcesContent":["/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Calendar\n   * @constructor\n   * @param {object} futureCalendarData - either an object literal or a promise\n   */\n  function Calendar(futureCalendarData) {\n    // Data is immediately available\n    this.init(futureCalendarData);\n    if (this.name && !this.id) {\n      // Create a new calendar on the server\n      var newCalendarData = Calendar.$$resource.create('createFolder', this.name);\n      this.$unwrap(newCalendarData);\n    }\n  }\n\n  /**\n   * @memberof Calendar\n   * @desc The factory we'll use to register with Angular\n   * @returns the Calendar constructor\n   */\n  Calendar.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Resource', 'Preferences', 'Component', 'Acl', function($q, $timeout, $log, Settings, Resource, Preferences, Component, Acl) {\n    angular.extend(Calendar, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      $Preferences: Preferences,\n      $Component: Component,\n      $$Acl: Acl,\n      activeUser: Settings.activeUser(),\n      $view: null\n    });\n\n    return Calendar; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Calendar in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .value('CalendarSettings', {\n      EventDragDayLength: 24 * 4,   // hour quarters\n      EventDragHorizontalOffset: 3  // pixels\n    })\n    .factory('Calendar', Calendar.$factory);\n\n  /**\n   * @memberof Calendar\n   * @desc Return the default calendar id according to the user's defaults.\n   * @returns a calendar id\n   */\n  Calendar.$defaultCalendar = function() {\n    var defaultCalendar = Calendar.$Preferences.defaults.SOGoDefaultCalendar,\n        calendar;\n\n    if (defaultCalendar == 'first') {\n      calendar = _.find(Calendar.$findAll(null, true), function(calendar) {\n        return calendar.active;\n      });\n      if (calendar)\n        return calendar.id;\n    }\n\n    return 'personal';\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Add a new calendar to the static list of calendars\n   * @param {Calendar} calendar - an Calendar object instance\n   */\n  Calendar.$add = function(calendar) {\n    // Insert new calendar at proper index\n    var list, sibling, i;\n\n    if (calendar.isWebCalendar)\n      list = this.$webcalendars;\n    else if (calendar.isSubscription)\n      list = this.$subscriptions;\n    else\n      list = this.$calendars;\n\n    sibling = _.find(list, function(o) {\n      return (calendar.id == 'personal' ||\n              (o.id != 'personal' &&\n               o.name.localeCompare(calendar.name) === 1));\n    });\n    i = sibling ? _.indexOf(_.map(list, 'id'), sibling.id) : 1;\n    list.splice(i, 0, calendar);\n\n    this.$Preferences.ready().then(function() {\n      if (Calendar.$Preferences.settings.Calendar.FoldersOrder)\n        // Save list order\n        Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    });\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Set or get the list of calendars. Will instanciate a new Calendar object for each item.\n   * @param {object[]} [data] - the metadata of the calendars\n   * @param {bool} [writable] - if true, returns only the list of writable calendars\n   * @returns the list of calendars\n   */\n  Calendar.$findAll = function(data, writable) {\n    var _this = this;\n    if (data) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      // Instanciate Calendar objects\n      angular.forEach(data, function(o, i) {\n        var calendar = new Calendar(o);\n        if (calendar.isWebCalendar)\n          _this.$webcalendars.push(calendar);\n        else if (calendar.isSubscription)\n          _this.$subscriptions.push(calendar);\n        else\n          _this.$calendars.push(calendar);\n      });\n    }\n    else if (angular.isUndefined(this.$calendars)) {\n      this.$calendars = [];\n      this.$subscriptions = [];\n      this.$webcalendars = [];\n      return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n        return Calendar.$findAll(data.calendars, writable);\n      });\n    }\n\n    if (writable) {\n      return _.union(this.$calendars, _.filter(this.$subscriptions, function(calendar) {\n        return calendar.isOwned || calendar.acls.objectCreator;\n      }));\n    }\n\n    return _.union(this.$calendars, this.$subscriptions, this.$webcalendars);\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$get = function(id) {\n    var calendar;\n\n    calendar = _.find(Calendar.$calendars, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$subscriptions, function(o) { return o.id == id; });\n    if (!calendar)\n      calendar = _.find(Calendar.$webcalendars, function(o) { return o.id == id; });\n\n    return calendar;\n  };\n\n  /**\n   * @memberof Calendar\n   * @desc Find a calendar among local instances (personal calendars, subscriptions and Web calendars).\n   * @param {string} id - the calendar ID\n   * @returns an object literal of the matching Calendar instance\n   */\n  Calendar.$getIndex = function(id) {\n    var i;\n\n    i = _.indexOf(_.map(Calendar.$calendars, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$subscriptions, 'id'), id);\n    if (i < 0)\n      i = _.indexOf(_.map(Calendar.$webcalendars, 'id'), id);\n\n    return i;\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to another user's calendar and add it to the list of calendars.\n   * @param {string} uid - user id\n   * @param {string} path - path of folder for specified user\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$subscribe = function(uid, path) {\n    var _this = this;\n    return Calendar.$$resource.userResource(uid).fetch(path, 'subscribe').then(function(calendarData) {\n      var calendar = new Calendar(angular.extend({ active: 1 }, calendarData));\n      if (!_.find(_this.$subscriptions, function(o) {\n        return o.id == calendarData.id;\n      })) {\n        Calendar.$add(calendar);\n      }\n      return calendar;\n    });\n  };\n\n  /**\n   * @memberOf Calendar\n   * @desc Subscribe to a remote Web calendar\n   * @param {string} url - URL of .ics file\n   * @returns a promise of the HTTP query result\n   */\n  Calendar.$addWebCalendar = function(url) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    if (_.find(_this.$webcalendars, function(o) {\n        return o.urls.webCalendarURL == url;\n    })) {\n      // Already subscribed\n      d.reject();\n    }\n    else {\n      Calendar.$$resource.post(null, 'addWebCalendar', { url: url }).then(function(calendarData) {\n        angular.extend(calendarData, {\n          isWebCalendar: true,\n          isEditable: true,\n          isRemote: false,\n          owner: Calendar.activeUser.login,\n          urls: { webCalendarURL: url }\n        });\n        var calendar = new Calendar(calendarData);\n        Calendar.$$resource.fetch(calendar.id, 'reload').then(function(data) {\n          // TODO: show a toast of the reload status\n          Calendar.$log.debug(JSON.stringify(data, undefined, 2));\n          Calendar.$add(calendar);\n          d.resolve();\n        }, function(response) {\n          if (response.status == 401) {\n            // Web calendar requires authentication\n            d.resolve(calendar);\n          }\n          else {\n            d.reject();\n          }\n        });\n      }, d.reject);\n    }\n\n    return d.promise;\n  };\n\n  /**\n   * @function reloadWebCalendars\n   * @memberof Calendar\n   * @desc Reload all Web calendars\n   * @return a promise combining the results of all HTTP operations\n   */\n  Calendar.reloadWebCalendars = function() {\n    var promises = [];\n\n    _.forEach(this.$webcalendars, function(calendar) {\n      var promise = Calendar.$$resource.fetch(calendar.id, 'reload');\n      promise.then(function(data) {\n        calendar.$error = false;\n      }, function(response) {\n        calendar.$error = l(response.statusText);\n      });\n      promises.push(promise);\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function $deleteComponents\n   * @memberof Calendar\n   * @desc Delete multiple components from calendar.\n   * @return a promise of the HTTP operation\n   */\n  Calendar.$deleteComponents = function(components) {\n    var _this = this, calendars = {}, promises = [];\n\n    _.forEach(components, function(component) {\n      if (!angular.isDefined(calendars[component.pid]))\n        calendars[component.pid] = [];\n      calendars[component.pid].push(component.id);\n    });\n\n    _.forEach(calendars, function(uids, pid) {\n      promises.push(Calendar.$$resource.post(pid, 'batchDelete', {uids: uids}));\n    });\n\n    return Calendar.$q.all(promises);\n  };\n\n  /**\n   * @function saveFoldersOrder\n   * @desc Save to the user's settings the current calendars order.\n   * @param {string[]} folders - the folders IDs\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.saveFoldersOrder = function(folders) {\n    return this.$$resource.post(null, 'saveFoldersOrder', { folders: folders }).then(function() {\n      Calendar.$Preferences.settings.Calendar.FoldersOrder = folders;\n      if (!folders)\n        // Calendars order was reset; reload list\n        return Calendar.$$resource.fetch('calendarslist').then(function(data) {\n          return Calendar.$findAll(data.calendars);\n        });\n    });\n  };\n\n  /**\n   * @function init\n   * @memberof Calendar.prototype\n   * @desc Extend instance with new data and compute additional attributes.\n   * @param {object} data - attributes of calendar\n   */\n  Calendar.prototype.init = function(data) {\n    this.color = this.color || '#AAAAAA';\n    this.active = 1;\n    angular.extend(this, data);\n    if (this.id) {\n      this.$acl = new Calendar.$$Acl('Calendar/' + this.id);\n    }\n    // Add 'isOwned' and 'isSubscription' attributes based on active user (TODO: add it server-side?)\n    this.isOwned = Calendar.activeUser.isSuperUser || this.owner == Calendar.activeUser.login;\n    this.isSubscription = !this.isRemote && this.owner != Calendar.activeUser.login;\n    if (angular.isUndefined(this.$shadowData)) {\n      // Make a copy of the data for an eventual reset\n      this.$shadowData = this.$omit();\n    }\n  };\n\n  /**\n   * @function $id\n   * @memberof Calendar.prototype\n   * @desc Resolve the calendar id.\n   * @returns a promise of the calendar id\n   */\n  Calendar.prototype.$id = function() {\n    if (this.id) {\n      // Object already unwrapped\n      return Calendar.$q.when(this.id);\n    }\n    else {\n      // Wait until object is unwrapped\n      return this.$futureCalendarData.then(function(calendar) {\n        return calendar.id;\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Calendar.prototype\n   * @desc Return the calendar CSS class name based on its ID.\n   * @returns a string representing the foreground CSS class name\n   */\n  Calendar.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + this.id;\n  };\n\n  /**\n   * @function $rename\n   * @memberof Calendar.prototype\n   * @desc Rename the calendar and keep the list sorted\n   * @param {string} name - the new name\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$rename = function() {\n    var _this = this,\n        i,\n        calendars;\n\n    if (this.name == this.$shadowData.name) {\n      // Name hasn't changed\n      return Calendar.$q.when();\n    }\n\n    if (this.isWebCalendar)\n      calendars = Calendar.$webcalendars;\n    else if (this.isSubscription)\n      calendars = Calendar.$subscriptions;\n    else\n      calendars = Calendar.$calendars;\n\n    i = _.indexOf(_.map(calendars, 'id'), this.id);\n    if (i > -1) {\n      return this.$save().then(function() {\n        calendars.splice(i, 1);\n        Calendar.$add(_this);\n      });\n    }\n    else {\n      return Calendar.$q.reject();\n    }\n  };\n\n  /**\n   * @function $delete\n   * @memberof Calendar.prototype\n   * @desc Delete the calendar from the server and the static list of calendars.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$delete = function() {\n    var _this = this,\n        list,\n        promise;\n\n    if (this.isSubscription) {\n      promise = Calendar.$$resource.fetch(this.id, 'unsubscribe');\n      list = Calendar.$subscriptions;\n    }\n    else {\n      promise = Calendar.$$resource.remove(this.id);\n      if (this.isWebCalendar)\n        list = Calendar.$webcalendars;\n      else\n        list = Calendar.$calendars;\n    }\n\n    return promise.then(function() {\n      var i = _.indexOf(_.map(list, 'id'), _this.id);\n      list.splice(i, 1);\n    });\n  };\n\n  /**\n   * @function $reset\n   * @memberof Calendar.prototype\n   * @desc Reset the original state the calendar's data.\n   */\n  Calendar.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    angular.extend(this, this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $save\n   * @memberof Calendar.prototype\n   * @desc Save the calendar properties to the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$save = function() {\n    var _this = this;\n\n    return Calendar.$$resource.save(this.id, this.$omit()).then(function(data) {\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n      return data;\n    }, function(data) {\n      Calendar.$log.error(JSON.stringify(data, undefined, 2));\n      // Restore previous version\n      _this.$reset();\n      return data;\n    });\n  };\n\n  /**\n   * @function setCredentials\n   * @memberof Calendar.prototype\n   * @desc Set the credentials for a Web calendar that requires authentication\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.setCredentials = function(username, password) {\n    var _this = this,\n        d = Calendar.$q.defer();\n\n    Calendar.$$resource.post(this.id, 'set-credentials', { username: username, password: password }).then(function() {\n      Calendar.$$resource.fetch(_this.id, 'reload').then(function(data) {\n        Calendar.$add(_this);\n        d.resolve();\n      }, function(response) {\n        if (response.status == 401) {\n          // Authentication failed\n          d.reject(l('Wrong username or password'));\n        }\n        else {\n          d.reject(response.statusText);\n        }\n      });\n    }, d.reject);\n\n    return d.promise;\n  };\n\n  /**\n   * @function export\n   * @memberof Calendar.prototype\n   * @desc Export the calendar\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.export = function() {\n    return Calendar.$$resource.download(this.id + '.ics', 'export', null, {type: 'application/octet-stream'});\n  };\n\n  /**\n   * @function $setActivation\n   * @memberof Calendar.prototype\n   * @desc Either activate or deactivate the calendar.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$setActivation = function() {\n    return Calendar.$$resource.fetch(this.id, (this.active?'':'de') + 'activateFolder');\n  };\n\n  /**\n   * @function $getComponent\n   * @memberof Calendar.prototype\n   * @desc Fetch a component attributes from the server.\n   * @returns a promise of the HTTP operation\n   */\n  Calendar.prototype.$getComponent = function(componentId, recurrenceId) {\n    return Calendar.$Component.$find(this.id, componentId, recurrenceId);\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Calendar.prototype\n   * @desc Unwrap a promise\n   * @param {promise} futureCalendarData - a promise of the Calendar's data\n   */\n  Calendar.prototype.$unwrap = function(futureCalendarData) {\n    var _this = this;\n\n    // Expose and resolve the promise\n    this.$futureCalendarData = futureCalendarData.then(function(data) {\n      return Calendar.$timeout(function() {\n        // Extend Calendar instance with received data\n        _this.init(data);\n        return _this;\n      });\n    }, function(data) {\n      _this.isError = true;\n      if (angular.isObject(data)) {\n        Calendar.$timeout(function() {\n          angular.extend(_this, data);\n        });\n      }\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Calendar.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Calendar instance\n   */\n  Calendar.prototype.$omit = function() {\n    var calendar = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$') {\n        calendar[key] = value;\n      }\n    });\n    return calendar;\n  };\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @name Component\n   * @constructor\n   * @param {object} futureComponentData - either an object literal or a promise\n   */\n  function Component(futureComponentData) {\n    // Data is immediately available\n    if (typeof futureComponentData.then !== 'function') {\n      this.init(futureComponentData);\n      if (this.pid && !this.id) {\n        // Prepare for the creation of a new component;\n        // Get UID from the server.\n        var newComponentData = Component.$$resource.newguid(this.pid);\n        this.$unwrap(newComponentData);\n        this.isNew = true;\n      }\n    }\n    else {\n      // The promise will be unwrapped first\n      this.$unwrap(futureComponentData);\n    }\n  }\n\n  /**\n   * @memberof Component\n   * @desc The factory we'll use to register with Angular\n   * @returns the Component constructor\n   */\n  Component.$factory = ['$q', '$timeout', '$log', 'sgSettings', 'Preferences', 'Card', 'Gravatar', 'Resource', function($q, $timeout, $log, Settings, Preferences, Card, Gravatar, Resource) {\n    angular.extend(Component, {\n      $q: $q,\n      $timeout: $timeout,\n      $log: $log,\n      $Preferences: Preferences,\n      $Card: Card,\n      $gravatar: Gravatar,\n      $$resource: new Resource(Settings.activeUser('folderURL') + 'Calendar', Settings.activeUser()),\n      timeFormat: \"%H:%M\",\n      // Filter parameters common to events and tasks\n      $query: { value: '', search: 'title_Category_Location' },\n      // Filter paramaters specific to events\n      $queryEvents: { sort: 'start', asc: 1, filterpopup: 'view_next7' },\n      // Filter parameters specific to tasks\n      $queryTasks: { sort: 'status', asc: 1, filterpopup: 'view_incomplete' },\n      $refreshTimeout: null,\n      $ghost: {}\n    });\n    Preferences.ready().then(function() {\n      // Initialize filter parameters from user's settings\n      if (Preferences.settings.Calendar.EventsFilterState)\n        Component.$queryEvents.filterpopup = Preferences.settings.Calendar.EventsFilterState;\n      if (Preferences.settings.Calendar.TasksFilterState)\n        Component.$queryTasks.filterpopup = Preferences.settings.Calendar.TasksFilterState;\n      if (Preferences.settings.Calendar.EventsSortingState) {\n        Component.$queryEvents.sort = Preferences.settings.Calendar.EventsSortingState[0];\n        Component.$queryEvents.asc = parseInt(Preferences.settings.Calendar.EventsSortingState[1]);\n      }\n      if (Preferences.settings.Calendar.TasksSortingState) {\n        Component.$queryTasks.sort = Preferences.settings.Calendar.TasksSortingState[0];\n        Component.$queryTasks.asc = parseInt(Preferences.settings.Calendar.TasksSortingState[1]);\n      }\n      Component.$queryTasks.show_completed = parseInt(Preferences.settings.ShowCompletedTasks);\n      // Initialize categories from user's defaults\n      Component.$categories = Preferences.defaults.SOGoCalendarCategoriesColors;\n      // Initialize time format from user's defaults\n      if (Preferences.defaults.SOGoTimeFormat) {\n        Component.timeFormat = Preferences.defaults.SOGoTimeFormat;\n      }\n    });\n\n    return Component; // return constructor\n  }];\n\n  /**\n   * @module SOGo.SchedulerUI\n   * @desc Factory registration of Component in Angular module.\n   */\n  try {\n    angular.module('SOGo.SchedulerUI');\n  }\n  catch(e) {\n    angular.module('SOGo.SchedulerUI', ['SOGo.Common']);\n  }\n  angular.module('SOGo.SchedulerUI')\n    .factory('Component', Component.$factory);\n\n  /**\n   * @function $selectedCount\n   * @memberof Component\n   * @desc Return the number of events or tasks selected by the user.\n   * @returns the number of selected events or tasks\n   */\n  Component.$selectedCount = function() {\n    var count;\n\n    count = 0;\n    if (Component.$events) {\n      count += (_.filter(Component.$events, function(event) { return event.selected; })).length;\n    }\n    if (Component.$tasks) {\n      count += (_.filter(Component.$tasks, function(task) { return task.selected; })).length;\n    }\n    return count;\n  };\n\n  /**\n   * @function $startRefreshTimeout\n   * @memberof Component\n   * @desc Starts the refresh timeout for the current selected component type, for all calendars\n   */\n  Component.$startRefreshTimeout = function(type) {\n    var _this = this;\n\n    if (Component.$refreshTimeout)\n      Component.$timeout.cancel(Component.$refreshTimeout);\n\n    Component.$Preferences.ready().then(function() {\n      // Restart the refresh timer, if needed\n      var refreshViewCheck = Component.$Preferences.defaults.SOGoRefreshViewCheck;\n      if (refreshViewCheck && refreshViewCheck != 'manually') {\n        var f = angular.bind(_this, Component.$filter, type);\n        Component.$refreshTimeout = Component.$timeout(f, refreshViewCheck.timeInterval()*1000);\n      }\n    });\n  };\n\n  /**\n   * @function $filter\n   * @memberof Component\n   * @desc Search for components matching some criterias\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {object} [options] - additional options to the query\n   * @returns a collection of Components instances\n   */\n  Component.$filter = function(type, options) {\n    var _this = this,\n        now = new Date(),\n        day = now.getDate(),\n        month = now.getMonth() + 1,\n        year = now.getFullYear(),\n        queryKey = '$query' + type.capitalize(),\n        params = {\n          day: '' + year + (month < 10?'0':'') + month + (day < 10?'0':'') + day,\n        };\n\n    Component.$startRefreshTimeout(type);\n\n    return this.$Preferences.ready().then(function() {\n      var futureComponentData,\n          dirty = false,\n          otherType;\n\n      angular.extend(_this.$query, params);\n\n      if (options) {\n        _.forEach(_.keys(options), function(key) {\n          // Query parameters common to events and tasks are compared\n          dirty |= (_this.$query[key] && options[key] != Component.$query[key]);\n          if (key == 'reload' && options[key])\n            dirty = true;\n          // Update either the common parameters or the type-specific parameters\n          else if (angular.isDefined(_this.$query[key]))\n            _this.$query[key] = options[key];\n          else\n            _this[queryKey][key] = options[key];\n        });\n      }\n\n      // Perform query with both common and type-specific parameters\n      futureComponentData = _this.$$resource.fetch(null, type + 'list',\n                                                   angular.extend(_this[queryKey], _this.$query));\n\n      // Invalidate cached results of other type if $query has changed\n      otherType = (type == 'tasks')? '$events' : '$tasks';\n      if (dirty) {\n        delete Component[otherType];\n        Component.$log.debug('force reload of ' + otherType);\n      }\n\n      return _this.$unwrapCollection(type, futureComponentData);\n    });\n  };\n\n  /**\n   * @function $find\n   * @desc Fetch a component from a specific calendar.\n   * @param {string} calendarId - the calendar ID\n   * @param {string} componentId - the component ID\n   * @param {string} [occurrenceId] - the component ID\n   * @see {@link Calendar.$getComponent}\n   */\n  Component.$find = function(calendarId, componentId, occurrenceId) {\n    var futureComponentData, path = [calendarId, componentId];\n\n    if (occurrenceId)\n      path.push(occurrenceId);\n\n    futureComponentData = this.$$resource.fetch(path.join('/'), 'view');\n\n    return new Component(futureComponentData);\n  };\n\n  /**\n   * @function filterCategories\n   * @desc Search for categories matching some criterias\n   * @param {string} search - the search string to match\n   * @returns a collection of strings\n   */\n  Component.filterCategories = function(query) {\n    var re = new RegExp(query, 'i');\n    return _.filter(_.keys(Component.$categories), function(category) {\n      return category.search(re) != -1;\n    });\n  };\n\n  /**\n   * @function saveSelectedList\n   * @desc Save to the user's settings the currently selected list.\n   * @param {string} componentType - either \"events\" or \"tasks\"\n   * @returns a promise of the HTTP operation\n   */\n  Component.saveSelectedList = function(componentType) {\n    return this.$$resource.post(null, 'saveSelectedList', { list: componentType + 'ListView' });\n  };\n\n  /**\n   * @function $eventsBlocksForView\n   * @desc Events blocks for a specific week\n   * @param {string} view - Either 'day' or 'week'\n   * @param {Date} type - Date of any day of the desired period\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocksForView = function(view, date) {\n    var _this = this;\n\n    return Component.$Preferences.ready().then(function(data) {\n      var firstDayOfWeek, viewAction, startDate, endDate, params;\n      firstDayOfWeek = Component.$Preferences.defaults.SOGoFirstDayOfWeek;\n\n      if (view == 'day') {\n        viewAction = 'dayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'multicolumnday') {\n        viewAction = 'multicolumndayView';\n        startDate = endDate = date;\n      }\n      else if (view == 'week') {\n        viewAction = 'weekView';\n        startDate = date.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(startDate.getTime());\n        endDate.addDays(6);\n      }\n      else if (view == 'month') {\n        viewAction = 'monthView';\n        startDate = date;\n        startDate.setDate(1);\n        startDate = startDate.beginOfWeek(firstDayOfWeek);\n        endDate = new Date();\n        endDate.setTime(date.getTime());\n        endDate.setMonth(endDate.getMonth() + 1);\n        endDate.addDays(-1);\n        endDate = endDate.endOfWeek(firstDayOfWeek);\n      }\n      return _this.$eventsBlocks(viewAction, startDate, endDate);\n    });\n  };\n\n  /**\n   * @function $eventsBlocks\n   * @desc Events blocks for a specific view and period\n   * @param {string} view - Either 'day', 'multicolumnday', 'week' or 'month'\n   * @param {Date} startDate - period's start date\n   * @param {Date} endDate - period's end date\n   * @returns a promise of a collection of objects describing the events blocks\n   */\n  Component.$eventsBlocks = function(view, startDate, endDate) {\n    var params, futureComponentData, i, j, dayDates = [], dayNumbers = [],\n        deferred = Component.$q.defer();\n\n    params = { view: view.toLowerCase(), sd: startDate.getDayString(), ed: endDate.getDayString() };\n    futureComponentData = this.$$resource.fetch(null, 'eventsblocks', params);\n    futureComponentData.then(function(views) {\n      var reduceComponent, associateComponent;\n\n      reduceComponent = function(objects, eventData, i) {\n        var componentData = _.zipObject(this.eventsFields, eventData),\n            start = new Date(componentData.c_startdate * 1000),\n            component;\n        componentData.hour = start.getHourString();\n        componentData.blocks = [];\n        component = new Component(componentData);\n        // Filter out categories for which there's no associated color\n        component.categories = _.filter(component.categories, function(name) {\n          return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n        });\n        objects.push(component);\n        return objects;\n      };\n\n      associateComponent = function(block) {\n        this[block.nbr].blocks.push(block); // Associate block to component\n        block.component = this[block.nbr];  // Associate component to block\n      };\n\n      Component.$views = [];\n      Component.$timeout(function() {\n        _.forEach(views, function(data, viewIndex) {\n          var components = [], blocks = {}, allDayBlocks = {}, viewData;\n\n          // Change some attributes names\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_folder'),        1, 'pid');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_name'),          1, 'id');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_recurrence_id'), 1, 'occurrenceId');\n          data.eventsFields.splice(_.indexOf(data.eventsFields, 'c_title'),         1, 'summary');\n\n          // Instantiate Component objects\n          _.reduce(data.events, _.bind(reduceComponent, data), components);\n\n          // Associate Component objects to blocks positions\n          _.forEach(_.flatten(data.blocks), _.bind(associateComponent, components));\n\n          // Associate Component objects to all-day blocks positions\n          _.forEach(_.flatten(data.allDayBlocks), _.bind(associateComponent, components));\n\n          // Build array of dates\n          if (dayDates.length === 0) {\n            dayDates = _.flatMap(data.days, 'date');\n            dayNumbers = _.flatMap(data.days, 'number');\n          }\n\n          // Convert array of blocks to an object literal with date strings as keys\n          for (i = 0; i < data.blocks.length; i++) {\n            for (j = 0; j < data.blocks[i].length; j++) {\n              data.blocks[i][j].dayIndex = i + (viewIndex * data.blocks.length);\n              data.blocks[i][j].dayNumber = dayNumbers[i];\n            }\n            blocks[dayDates[i]] = data.blocks[i];\n          }\n\n          // Convert array of all-day blocks to object with days as keys\n          for (i = 0; i < data.allDayBlocks.length; i++) {\n            for (j = 0; j < data.allDayBlocks[i].length; j++) {\n              data.allDayBlocks[i][j].dayIndex = i + (viewIndex * data.allDayBlocks.length);\n              data.allDayBlocks[i][j].dayNumber = dayNumbers[i];\n            }\n            allDayBlocks[dayDates[i]] = data.allDayBlocks[i];\n          }\n\n          // \"blocks\" is now an object literal with the following structure:\n          // { day: [\n          //    { start: number,\n          //      length: number,\n          //      siblings: number,\n          //      realSiblings: number,\n          //      position: number,\n          //      nbr: number,\n          //      component: Component },\n          //    .. ],\n          //  .. }\n          //\n          // Where day is a string with format YYYYMMDD\n\n          Component.$log.debug('blocks ready (' + _.flatten(data.blocks).length + ')');\n          Component.$log.debug('all day blocks ready (' + _.flatten(data.allDayBlocks).length + ')');\n\n          // Save the blocks to the object model\n          viewData = { blocks: blocks, allDayBlocks: allDayBlocks };\n          if (data.id && data.calendarName) {\n            // The multicolumnday view also includes calendar information\n            viewData.id = data.id;\n            viewData.calendarName = data.calendarName;\n          }\n          Component.$views.push(viewData);\n        });\n\n        deferred.resolve(Component.$views);\n      });\n    }, deferred.reject);\n\n    return deferred.promise;\n  };\n\n  /**\n   * @function $unwrapCollection\n   * @desc Unwrap a promise and instanciate new Component objects using received data.\n   * @param {string} type - either 'events' or 'tasks'\n   * @param {promise} futureComponentData - a promise of the components' metadata\n   * @returns a promise of the HTTP operation\n   */\n  Component.$unwrapCollection = function(type, futureComponentData) {\n    var _this = this,\n        components = [];\n\n    return futureComponentData.then(function(data) {\n      return Component.$timeout(function() {\n        var fields = _.invokeMap(data.fields, 'toLowerCase');\n          fields.splice(_.indexOf(fields, 'c_folder'), 1, 'pid');\n          fields.splice(_.indexOf(fields, 'c_name'), 1, 'id');\n          fields.splice(_.indexOf(fields, 'c_recurrence_id'), 1, 'occurrenceId');\n\n        // Instanciate Component objects\n        _.reduce(data[type], function(components, componentData, i) {\n          var data = _.zipObject(fields, componentData), component;\n          component = new Component(data);\n          // Filter out categories for which there's no associated color\n          component.categories = _.filter(component.categories, function(name) {\n            return Component.$Preferences.defaults.SOGoCalendarCategoriesColors[name];\n          });\n          components.push(component);\n          return components;\n        }, components);\n\n        Component.$log.debug('list of ' + type + ' ready (' + components.length + ')');\n\n        // Save the list of components to the object model\n        Component['$' + type] = components;\n\n        return components;\n      });\n    });\n  };\n\n  /**\n   * @function $resetGhost\n   * @desc Prepare the ghost object for the next drag by resetting appropriate attributes\n   */\n  Component.$resetGhost = function() {\n    this.$ghost.pointerHandler = null;\n    this.$ghost.component = null;\n    this.$ghost.startHour = null;\n    this.$ghost.endHour = null;\n  };\n\n  /**\n   * @function $parseDate\n   * @desc Parse a date string with format YYYY-MM-DDTHH:MM\n   * @param {string} dateString - the string representing the date\n   * @param {object} [options] - additional options (use {no_time: true} to ignore the time)\n   * @returns a date object\n   */\n  Component.$parseDate = function(dateString, options) {\n    var date, time;\n\n    date = dateString.substring(0,10).split('-');\n\n    if (options && options.no_time)\n      return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]));\n\n    time = dateString.substring(11,16).split(':');\n\n    return new Date(parseInt(date[0]), parseInt(date[1]) - 1, parseInt(date[2]),\n                    parseInt(time[0]), parseInt(time[1]), 0, 0);\n    };\n\n  /**\n   * @function init\n   * @memberof Component.prototype\n   * @desc Extend instance with required attributes and new data.\n   * @param {object} data - attributes of component\n   */\n  Component.prototype.init = function(data) {\n    var _this = this;\n\n    this.categories = [];\n    this.repeat = {};\n    this.alarm = { action: 'display', quantity: 5, unit: 'MINUTES', reference: 'BEFORE', relation: 'START' };\n    this.status = 'not-specified';\n    this.delta = 60;\n    angular.extend(this, data);\n\n    Component.$Preferences.ready().then(function() {\n      var type = (_this.type == 'appointment')? 'Events' : 'Tasks';\n\n      // Set default values from user's defaults\n      _this.classification = _this.classification ||\n        Component.$Preferences.defaults['SOGoCalendar' + type + 'DefaultClassification'].toLowerCase();\n    });\n\n    if (this.component == 'vevent')\n      this.type = 'appointment';\n    else if (this.component == 'vtodo')\n      this.type = 'task';\n\n    if (this.startDate) {\n      if (angular.isString(this.startDate))\n        // Ex: 2015-10-25T22:34:51+00:00\n        this.start = Component.$parseDate(this.startDate);\n      else\n        // Date object\n        this.start = this.startDate;\n    }\n    else if (this.type == 'appointment') {\n      this.start = new Date();\n      this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n    }\n\n    if (this.endDate) {\n      this.end = Component.$parseDate(this.endDate);\n      this.delta = this.start.minutesTo(this.end);\n    }\n    else if (this.type == 'appointment') {\n      this.setDelta(this.delta);\n    }\n\n    if (this.dueDate)\n      this.due = Component.$parseDate(this.dueDate);\n\n    if (this.completedDate)\n      this.completed = Component.$parseDate(this.completedDate);\n    else if (this.type == 'task')\n      this.completed = new Date();\n\n    if (this.c_category)\n      this.categories = _.invokeMap(this.c_category, 'asCSSIdentifier');\n\n    // Parse recurrence rule definition and initialize default values\n    this.$isRecurrent = angular.isDefined(data.repeat);\n    if (this.repeat.days) {\n      var byDayMask = _.find(this.repeat.days, function(o) {\n        return angular.isDefined(o.occurrence);\n      });\n      if (byDayMask) {\n        if (this.repeat.frequency == 'yearly')\n          this.repeat.year = { byday: true };\n        this.repeat.month = {\n          type: 'byday',\n          occurrence: byDayMask.occurrence.toString(),\n          day: byDayMask.day\n        };\n      }\n    }\n    else {\n      this.repeat.days = [];\n    }\n    if (angular.isUndefined(this.repeat.frequency))\n      this.repeat.frequency = 'never';\n    if (angular.isUndefined(this.repeat.interval))\n      this.repeat.interval = 1;\n    if (angular.isUndefined(this.repeat.month))\n      this.repeat.month = { occurrence: '1', day: 'SU', type: 'bymonthday' };\n    if (angular.isUndefined(this.repeat.monthdays))\n      // TODO: initialize this.repeat.monthdays with month day of start date\n      this.repeat.monthdays = [];\n    if (angular.isUndefined(this.repeat.months))\n      // TODO: initialize this.repeat.months with month of start date\n      this.repeat.months = [];\n    if (angular.isUndefined(this.repeat.year))\n      this.repeat.year = {};\n    if (this.repeat.count)\n      this.repeat.end = 'count';\n    else if (this.repeat.until) {\n      this.repeat.end = 'until';\n      this.repeat.until = Component.$parseDate(this.repeat.until, { no_time: true });\n    }\n    else\n      this.repeat.end = 'never';\n    this.$hasCustomRepeat = this.hasCustomRepeat();\n\n    if (this.isNew) {\n      // Set default alarm\n      Component.$Preferences.ready().then(function() {\n        var units = { M: 'MINUTES', H: 'HOURS', D: 'DAYS', W: 'WEEKS' };\n        var match = /-PT?([0-9]+)([MHDW])/.exec(Component.$Preferences.defaults.SOGoCalendarDefaultReminder);\n        if (match) {\n          _this.$hasAlarm = true;\n          _this.alarm.quantity = parseInt(match[1]);\n          _this.alarm.unit = units[match[2]];\n        }\n      });\n    }\n    else {\n      this.$hasAlarm = angular.isDefined(data.alarm);\n    }\n\n    // Allow the component to be moved to a different calendar\n    this.destinationCalendar = this.pid;\n\n    // if (this.organizer && this.organizer.email) {\n    //   this.organizer.$image = Component.$gravatar(this.organizer.email, 32);\n    // }\n\n    // Load freebusy of attendees\n    this.updateFreeBusy();\n\n    this.selected = false;\n  };\n\n  /**\n   * @function hasCustomRepeat\n   * @memberof Component.prototype\n   * @desc Check if the component has a custom recurrence rule.\n   * @returns true if the recurrence rule requires the full recurrence editor\n   */\n  Component.prototype.hasCustomRepeat = function() {\n    var b = angular.isDefined(this.repeat) &&\n        (this.repeat.interval > 1 ||\n         this.repeat.days && this.repeat.days.length > 0 ||\n         this.repeat.monthdays && this.repeat.monthdays.length > 0 ||\n         this.repeat.months && this.repeat.months.length > 0);\n    return b;\n  };\n\n  /**\n   * @function isEditable\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditable = function() {\n    return (!this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isEditableOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component is editable and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isEditableOccurrence = function() {\n    return (this.occurrenceId && !this.isReadOnly);\n  };\n\n  /**\n   * @function isInvitation\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and not an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitation = function() {\n    return (!this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isInvitationOccurrence\n   * @memberof Component.prototype\n   * @desc Check if the component an invitation and an occurrence of a recurrent component\n   * @returns true or false\n   */\n  Component.prototype.isInvitationOccurrence = function() {\n    return (this.occurrenceId && this.userHasRSVP);\n  };\n\n  /**\n   * @function isReadOnly\n   * @memberof Component.prototype\n   * @desc Check if the component is not editable and not an invitation\n   * @returns true or false\n   */\n  Component.prototype.isReadOnly = function() {\n    return (this.isReadOnly && !this.userHasRSVP);\n  };\n\n  /**\n   * @function enablePercentComplete\n   * @memberof Component.prototype\n   * @desc Check if the percent completion should be enabled with respect to the\n   *       component's type and status.\n   * @returns true if the percent completion should be displayed\n   */\n  Component.prototype.enablePercentComplete = function() {\n    return (this.type == 'task' &&\n            this.status != 'not-specified' &&\n            this.status != 'cancelled');\n  };\n\n  /**\n   * @function coversFreeBusy\n   * @memberof Component.prototype\n   * @desc Check if a specific quarter matches the component's period\n   * @returns true if the quarter covers the component's period\n   */\n  Component.prototype.coversFreeBusy = function(day, hour, quarter) {\n    var b = (angular.isDefined(this.freebusy[day]) &&\n             angular.isDefined(this.freebusy[day][hour]) &&\n             this.freebusy[day][hour][quarter] == 1);\n    return b;\n  };\n\n  /**\n   * @function updateFreeBusyCoverage\n   * @memberof Component.prototype\n   * @desc Build a 15-minute-based representation of the component's period.\n   * @returns an object literal hashed by days and hours and arrays of four 1's and 0's\n   */\n  Component.prototype.updateFreeBusyCoverage = function() {\n    var _this = this, freebusy = {};\n\n    if (this.start && this.end) {\n      var roundedStart = new Date(this.start.getTime()),\n          roundedEnd = new Date(this.end.getTime()),\n          startQuarter = parseInt(roundedStart.getMinutes()/15 + 0.5),\n          endQuarter = parseInt(roundedEnd.getMinutes()/15 + 0.5);\n      roundedStart.setMinutes(15*startQuarter);\n      roundedEnd.setMinutes(15*endQuarter);\n\n      _.forEach(roundedStart.daysUpTo(roundedEnd), function(date, index) {\n        var currentDay = date.getDate(),\n            dayKey = date.getDayString(),\n            hourKey;\n        if (dayKey == _this.start.getDayString()) {\n          hourKey = date.getHours().toString();\n          freebusy[dayKey] = {};\n          freebusy[dayKey][hourKey] = [];\n          while (startQuarter > 0) {\n            freebusy[dayKey][hourKey].push(0);\n            startQuarter--;\n          }\n        }\n        else {\n          date = date.beginOfDay();\n          freebusy[dayKey] = {};\n        }\n        while (date.getTime() < _this.end.getTime() &&\n               date.getDate() == currentDay) {\n          hourKey = date.getHours().toString();\n          if (angular.isUndefined(freebusy[dayKey][hourKey]))\n            freebusy[dayKey][hourKey] = [];\n          freebusy[dayKey][hourKey].push(1);\n          date.addMinutes(15);\n        }\n      });\n      return freebusy;\n    }\n  };\n\n  /**\n   * @function updateFreeBusy\n   * @memberof Component.prototype\n   * @desc Update the freebusy coverage representation and the attendees freebusy information\n   */\n  Component.prototype.updateFreeBusy = function() {\n    var _this = this;\n\n    this.freebusy = this.updateFreeBusyCoverage();\n\n    if (this.attendees) {\n      _.forEach(this.attendees, function(attendee) {\n        attendee.image = Component.$gravatar(attendee.email, 32);\n        _this.updateFreeBusyAttendee(attendee);\n      });\n    }\n  };\n\n  /**\n   * @function setDelta\n   * @memberof Component.prototype\n   * @desc Set the end time to the specified number of minutes after the start time.\n   * @param {number} delta - the number of minutes\n   */\n  Component.prototype.setDelta = function(delta) {\n    this.delta = delta;\n    this.end = new Date(this.start.getTime());\n    this.end.setMinutes(Math.round(this.end.getMinutes()/15)*15);\n    this.end.addMinutes(this.delta);\n  };\n\n  /**\n   * @function updateFreeBusyAttendee\n   * @memberof Component.prototype\n   * @desc Update the freebusy information for the component's period for a specific attendee.\n   * @param {Object} card - an Card object instance of the attendee\n   */\n  Component.prototype.updateFreeBusyAttendee = function(attendee) {\n    var params, url, days;\n    if (attendee.uid) {\n      params =\n        {\n          sday: this.start.getDayString(),\n          eday: this.end.getDayString()\n        };\n      url = ['..', '..', attendee.uid, 'freebusy.ifb'];\n      days = _.map(this.start.daysUpTo(this.end), function(day) { return day.getDayString(); });\n\n      if (angular.isUndefined(attendee.freebusy))\n        attendee.freebusy = {};\n\n      // Fetch FreeBusy information\n      Component.$$resource.fetch(url.join('/'), 'ajaxRead', params).then(function(data) {\n        _.forEach(days, function(day) {\n          var hour;\n\n          if (angular.isUndefined(attendee.freebusy[day]))\n            attendee.freebusy[day] = {};\n\n          if (angular.isUndefined(data[day]))\n            data[day] = {};\n\n          for (var i = 0; i <= 23; i++) {\n            hour = i.toString();\n            if (data[day][hour])\n              attendee.freebusy[day][hour] = [\n                data[day][hour][\"0\"],\n                data[day][hour][\"15\"],\n                data[day][hour][\"30\"],\n                data[day][hour][\"45\"]\n              ];\n            else\n              attendee.freebusy[day][hour] = [0, 0, 0, 0];\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * @function getClassName\n   * @memberof Component.prototype\n   * @desc Return the component CSS class name based on its container (calendar) ID.\n   * @param {string} [base] - the prefix to add to the class name (defaults to \"fg\")\n   * @returns a string representing the foreground CSS class name\n   */\n  Component.prototype.getClassName = function(base) {\n    if (angular.isUndefined(base))\n      base = 'fg';\n    return base + '-folder' + (this.destinationCalendar || this.c_folder || this.pid);\n  };\n\n  /**\n   * @function addAttendee\n   * @memberof Component.prototype\n   * @desc Add an attendee and fetch his freebusy info.\n   * @param {Object} card - an Card object instance to be added to the attendees list\n   */\n  Component.prototype.addAttendee = function(card) {\n    var _this = this, attendee, list, url, params;\n    if (card) {\n      if (card.$isList() && card.isGroup !== 1) {\n        // Decompose list members\n        list = Component.$Card.$find(card.container, card.c_name);\n        list.$id().then(function(listId) {\n          _.forEach(list.refs, function(ref) {\n            attendee = {\n              name: ref.c_cn,\n              email: ref.$preferredEmail(),\n              role: 'req-participant',\n              status: 'needs-action',\n              uid: ref.c_uid\n            };\n            if (!_.find(_this.attendees, function(o) {\n              return o.email == attendee.email;\n            })) {\n              // Contact is not already an attendee, add it\n              attendee.image = Component.$gravatar(attendee.email, 32);\n              if (_this.attendees)\n                _this.attendees.push(attendee);\n              else\n                _this.attendees = [attendee];\n              _this.updateFreeBusyAttendee(attendee);\n            }\n          });\n        });\n      }\n      else {\n        // Single contact\n        attendee = {\n          name: card.c_cn,\n          email: card.$preferredEmail(),\n          role: 'req-participant',\n          status: 'needs-action',\n          uid: card.c_uid\n        };\n        if (!_.find(this.attendees, function(o) {\n          return o.email == attendee.email;\n        })) {\n          attendee.image = Component.$gravatar(attendee.email, 32);\n          if (this.attendees)\n            this.attendees.push(attendee);\n          else\n            this.attendees = [attendee];\n          this.updateFreeBusyAttendee(attendee);\n        }\n      }\n    }\n  };\n\n  /**\n   * @function hasAttendee\n   * @memberof Component.prototype\n   * @desc Verify if one of the email addresses of a Card instance matches an attendee.\n   * @param {Object} card - an Card object instance\n   * @returns true if the Card matches an attendee\n   */\n  Component.prototype.hasAttendee = function(card) {\n    var attendee = _.find(this.attendees, function(attendee) {\n      return _.find(card.emails, function(email) {\n        return email.value == attendee.email;\n      });\n    });\n    return angular.isDefined(attendee);\n  };\n\n  /**\n   * @function deleteAttendee\n   * @memberof Component.prototype\n   * @desc Remove an attendee from the component\n   * @param {Object} attendee - an object literal defining an attendee\n   */\n  Component.prototype.deleteAttendee = function(attendee) {\n    var index = _.findIndex(this.attendees, function(currentAttendee) {\n      return currentAttendee.email == attendee.email;\n    });\n    this.attendees.splice(index, 1);\n  };\n\n  /**\n   * @function canRemindAttendeesByEmail\n   * @memberof Component.prototype\n   * @desc Verify if the component's reminder must be send by email and if it has at least one attendee.\n   * @returns true if attendees can receive a reminder by email\n   */\n  Component.prototype.canRemindAttendeesByEmail = function() {\n    return this.alarm.action == 'email' &&\n      !this.isReadOnly &&\n      this.attendees && this.attendees.length > 0;\n  };\n\n  /**\n   * @function addAttachUrl\n   * @memberof Component.prototype\n   * @desc Add a new attach URL if not already defined\n   * @param {string} attachUrl - the URL\n   * @returns the number of values in the list of attach URLs\n   */\n  Component.prototype.addAttachUrl = function(attachUrl) {\n    if (angular.isUndefined(this.attachUrls)) {\n      this.attachUrls = [{value: attachUrl}];\n    }\n    else {\n      for (var i = 0; i < this.attachUrls.length; i++) {\n        if (this.attachUrls[i].value == attachUrl) {\n          break;\n        }\n      }\n      if (i == this.attachUrls.length)\n        this.attachUrls.push({value: attachUrl});\n    }\n    return this.attachUrls.length - 1;\n  };\n\n  /**\n   * @function deleteAttachUrl\n   * @memberof Component.prototype\n   * @desc Remove an attach URL\n   * @param {number} index - the URL index in the list of attach URLs\n   */\n  Component.prototype.deleteAttachUrl = function(index) {\n    if (index > -1 && this.attachUrls.length > index) {\n      this.attachUrls.splice(index, 1);\n    }\n  };\n\n  /**\n   * @function $addDueDate\n   * @memberof Component.prototype\n   * @desc Add a due date\n   */\n  Component.prototype.$addDueDate = function() {\n    this.due = new Date();\n    this.due.setMinutes(Math.round(this.due.getMinutes()/15)*15);\n    this.dueDate = this.due.toISOString();\n  };\n\n  /**\n   * @function $deleteDueDate\n   * @memberof Component.prototype\n   * @desc Delete a due date\n   */\n  Component.prototype.$deleteDueDate = function() {\n    delete this.due;\n    delete this.dueDate;\n  };\n\n  /**\n   * @function $addStartDate\n   * @memberof Component.prototype\n   * @desc Add a start date\n   */\n  Component.prototype.$addStartDate = function() {\n    this.start = new Date();\n    this.start.setMinutes(Math.round(this.start.getMinutes()/15)*15);\n  };\n\n  /**\n   * @function $deleteStartDate\n   * @memberof Component.prototype\n   * @desc Delete a start date\n   */\n  Component.prototype.$deleteStartDate = function() {\n    delete this.start;\n    delete this.startDate;\n  };\n\n  /**\n   * @function $reset\n   * @memberof Component.prototype\n   * @desc Reset the original state the component's data.\n   */\n  Component.prototype.$reset = function() {\n    var _this = this;\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' && key[0] != '$') {\n        delete _this[key];\n      }\n    });\n    this.init(this.$shadowData);\n    this.$shadowData = this.$omit();\n  };\n\n  /**\n   * @function $reply\n   * @memberof Component.prototype\n   * @desc Reply to an invitation.\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$reply = function() {\n    var _this = this, data, path = [this.pid, this.id];\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    data = {\n      reply: this.reply,\n      delegatedTo: this.delegatedTo,\n      alarm: this.$hasAlarm? this.alarm : {}\n    };\n\n    return Component.$$resource.save(path.join('/'), data, { action: 'rsvpAppointment' })\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $adjust\n   * @memberof Component.prototype\n   * @desc Adjust the start, day, and/or duration of the component\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.$adjust = function(params) {\n    var path = [this.pid, this.id];\n\n    if (_.every(_.values(params), function(v) { return v === 0; }))\n      // No changes\n      return Component.$q.when();\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    Component.$log.debug('adjust ' + path.join('/') + ' ' + JSON.stringify(params));\n\n    return Component.$$resource.save(path.join('/'), params, { action: 'adjust' });\n  };\n\n  /**\n   * @function $save\n   * @memberof Component.prototype\n   * @desc Save the component to the server.\n   * @param {object} extraAttributes - additional attributes to send to the server\n   */\n  Component.prototype.$save = function(extraAttributes) {\n    var _this = this, options, path, component, date, dlp;\n\n    component = this.$omit();\n    dlp = Component.$Preferences.$mdDateLocaleProvider;\n\n    // Format dates and times\n    component.startDate = component.start ? component.start.format(dlp, '%Y-%m-%d') : '';\n    component.startTime = component.start ? component.start.format(dlp, '%H:%M') : '';\n    component.endDate = component.end ? component.end.format(dlp, '%Y-%m-%d') : '';\n    component.endTime = component.end ? component.end.format(dlp, '%H:%M') : '';\n    component.dueDate = component.due ? component.due.format(dlp, '%Y-%m-%d') : '';\n    component.dueTime = component.due ? component.due.format(dlp, '%H:%M') : '';\n    component.completedDate = component.completed ? component.completed.format(dlp, '%Y-%m-%d') : '';\n\n    // Update recurrence definition depending on selections\n    if (this.$hasCustomRepeat) {\n      if (this.repeat.frequency == 'monthly' && this.repeat.month.type && this.repeat.month.type == 'byday' ||\n          this.repeat.frequency == 'yearly' && this.repeat.year.byday) {\n        // BYDAY mask for a monthly or yearly recurrence\n        delete component.repeat.monthdays;\n        component.repeat.days = [{ day: this.repeat.month.day, occurrence: this.repeat.month.occurrence.toString() }];\n      }\n      else if ((this.repeat.frequency == 'monthly' || this.repeat.frequency == 'yearly') &&\n               this.repeat.month.type) {\n        // montly recurrence by month days or yearly by month\n        delete component.repeat.days;\n      }\n    }\n    else if (this.repeat.frequency && this.repeat.frequency != 'never') {\n      component.repeat = { frequency: this.repeat.frequency };\n    }\n    if (this.repeat.frequency) {\n      if (this.repeat.end == 'until' && this.repeat.until)\n        component.repeat.until = this.repeat.until.stringWithSeparator('-');\n      else if (this.repeat.end == 'count' && this.repeat.count)\n        component.repeat.count = this.repeat.count;\n      else {\n        delete component.repeat.until;\n        delete component.repeat.count;\n      }\n    }\n    else {\n      delete component.repeat;\n    }\n\n    // Check status\n    if (this.status == 'not-specified')\n      delete component.status;\n    else if (this.status != 'completed')\n      delete component.completedDate;\n\n    // Verify alarm\n    if (this.$hasAlarm) {\n      if (this.alarm.action && this.alarm.action == 'email' &&\n          !(this.attendees && this.attendees.length > 0)) {\n        // No attendees; email reminder must be sent to organizer only\n        component.alarm.attendees = 0;\n        component.alarm.organizer = 1;\n      }\n    }\n    else {\n      component.alarm = {};\n    }\n\n    // Build URL\n    path = [this.pid, this.id];\n\n    if (this.isNew)\n      options = { action: 'saveAs' + this.type.capitalize() };\n\n    if (this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    angular.extend(component, extraAttributes);\n\n    return Component.$$resource.save(path.join('/'), component, options)\n      .then(function(data) {\n        // Make a copy of the data for an eventual reset\n        _this.$shadowData = _this.$omit();\n        return data;\n      });\n  };\n\n  /**\n   * @function $delete\n   * @memberof Component.prototype\n   * @desc Delete the component from the server.\n   * @param {boolean} occurrenceOnly - delete this occurrence only\n   */\n  Component.prototype.remove = function(occurrenceOnly) {\n    var _this = this, path = [this.pid, this.id];\n\n    if (occurrenceOnly && this.occurrenceId)\n      path.push(this.occurrenceId);\n\n    return Component.$$resource.remove(path.join('/'));\n  };\n\n  /**\n   * @function $unwrap\n   * @memberof Component.prototype\n   * @desc Unwrap a promise.\n   * @param {promise} futureComponentData - a promise of some of the Component's data\n   */\n  Component.prototype.$unwrap = function(futureComponentData) {\n    var _this = this;\n\n    // Expose the promise\n    this.$futureComponentData = futureComponentData;\n\n    // Resolve the promise\n    this.$futureComponentData.then(function(data) {\n      _this.init(data);\n      // Make a copy of the data for an eventual reset\n      _this.$shadowData = _this.$omit();\n    }, function(data) {\n      angular.extend(_this, data);\n      _this.isError = true;\n      Component.$log.error(_this.error);\n    });\n  };\n\n  /**\n   * @function $omit\n   * @memberof Component.prototype\n   * @desc Return a sanitized object used to send to the server.\n   * @return an object literal copy of the Component instance\n   */\n  Component.prototype.$omit = function() {\n    var component = {};\n    angular.forEach(this, function(value, key) {\n      if (key != 'constructor' &&\n          key[0] != '$' &&\n          key != 'blocks') {\n        component[key] = angular.copy(value);\n      }\n    });\n\n    return component;\n  };\n\n  /**\n   * @function repeatDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the recurrence definition\n   * @return a localized string\n   */\n  Component.prototype.repeatDescription = function() {\n    var localizedString = null;\n    if (this.repeat)\n      localizedString = l('repeat_' + this.repeat.frequency.toUpperCase());\n\n    return localizedString;\n  };\n\n  /**\n   * @function alarmDescription\n   * @memberof Component.prototype\n   * @desc Return a localized description of the reminder definition\n   * @return a localized string\n   */\n  Component.prototype.alarmDescription = function() {\n    var key, localizedString = null;\n    if (this.alarm) {\n      key = ['reminder' + this.alarm.quantity, this.alarm.unit, this.alarm.reference].join('_');\n      localizedString = l(key);\n      if (key === localizedString)\n        // No localized string for this reminder definition\n        localizedString = [this.alarm.quantity,\n                           l('reminder_' + this.alarm.unit),\n                           l('reminder_' + this.alarm.reference)].join(' ');\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * @function copyTo\n   * @memberof Component.prototype\n   * @desc Copy an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.copyTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'copy', {destination: calendar});\n  };\n\n  /**\n   * @function moveTo\n   * @memberof Component.prototype\n   * @desc Move an event to a calendar\n   * @param {string} calendar - a target calendar UID\n   * @returns a promise of the HTTP operation\n   */\n  Component.prototype.moveTo = function(calendar) {\n    return Component.$$resource.post(this.pid + '/' + this.id, 'move', {destination: calendar});\n  };\n\n  Component.prototype.toString = function() {\n    return '[Component ' + this.id + ']';\n  };\n\n\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarController.$inject = ['$scope', '$rootScope', '$state', '$stateParams', 'Calendar', 'Component', 'stateEventsBlocks'];\n  function CalendarController($scope, $rootScope, $state, $stateParams, Calendar, Component, stateEventsBlocks) {\n    var vm = this, deregisterCalendarsList;\n\n    // Make the toolbar state of all-day events persistent\n    if (angular.isUndefined(CalendarController.expandedAllDays))\n      CalendarController.expandedAllDays = false;\n\n    vm.expandedAllDays = CalendarController.expandedAllDays;\n    vm.toggleAllDays = toggleAllDays;\n    vm.views = stateEventsBlocks;\n    vm.changeDate = changeDate;\n    vm.changeView = changeView;\n\n    // Refresh current view when the list of calendars is modified\n    deregisterCalendarsList = $rootScope.$on('calendars:list', updateView);\n\n    $scope.$on('$destroy', deregisterCalendarsList);\n\n    // Expand or collapse all-day events\n    function toggleAllDays() {\n      CalendarController.expandedAllDays = !CalendarController.expandedAllDays;\n      vm.expandedAllDays = CalendarController.expandedAllDays;\n    }\n\n    function updateView() {\n      // See stateEventsBlocks in Scheduler.app.js\n      Component.$eventsBlocksForView($stateParams.view, $stateParams.day.asDate()).then(function(data) {\n        vm.views = data;\n        _.forEach(vm.views, function(view) {\n          if (view.id) {\n            // Note: this can't be done in Component service since it would make Component dependent on\n            // the Calendar service and create a circular dependency\n            view.calendar = new Calendar({ id: view.id, name: view.calendarName });\n          }\n        });\n      });\n    }\n\n    // Change calendar's date\n    function changeDate($event) {\n      var date = angular.element($event.currentTarget).attr('date');\n      $state.go('calendars.view', { day: date });\n    }\n\n    // Change calendar's view\n    function changeView(view) {\n      $state.go('calendars.view', { view: view });\n    }\n}\n\n  angular\n    .module('SOGo.SchedulerUI')  \n    .controller('CalendarController', CalendarController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarListController.$inject = ['$rootScope', '$timeout', '$state', '$mdDialog', 'Dialog', 'Preferences', 'Calendar', 'Component'];\n  function CalendarListController($rootScope, $timeout, $state, $mdDialog, Dialog, Preferences, Calendar, Component) {\n    var vm = this;\n\n    vm.component = Component;\n    vm.componentType = 'events';\n    vm.selectedList = 0;\n    vm.selectComponentType = selectComponentType;\n    vm.unselectComponents = unselectComponents;\n    vm.selectAll = selectAll;\n    vm.toggleComponentSelection = toggleComponentSelection;\n    vm.confirmDeleteSelectedComponents = confirmDeleteSelectedComponents;\n    vm.openEvent = openEvent;\n    vm.openTask = openTask;\n    vm.newComponent = newComponent;\n    vm.filterpopup = filterpopup;\n    vm.filter = filter;\n    vm.filteredBy = filteredBy;\n    vm.sort = sort;\n    vm.sortedBy = sortedBy;\n    vm.reload = reload;\n    vm.cancelSearch = cancelSearch;\n    vm.mode = { search: false, multiple: 0 };\n\n    // Select list based on user's settings\n    Preferences.ready().then(function() {\n      var type = 'events';\n      if (Preferences.settings.Calendar.SelectedList == 'tasksListView') {\n        vm.selectedList = 1;\n        type = 'tasks';\n      }\n      selectComponentType(type, { reload: true });\n    });\n\n    // Refresh current list when the list of calendars is modified\n    $rootScope.$on('calendars:list', function() {\n      Component.$filter(vm.componentType, { reload: true });\n    });\n\n    // Update the component being dragged\n    $rootScope.$on('calendar:dragend', updateComponentFromGhost);\n\n    // Switch between components tabs\n    function selectComponentType(type, options) {\n      if (options && options.reload || vm.componentType != type) {\n        if (angular.isUndefined(Component['$' + type]))\n          Component.$filter(type);\n        vm.unselectComponents();\n        vm.componentType = type;\n        Component.saveSelectedList(type);\n      }\n    }\n\n    function unselectComponents() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = false;\n      });\n      vm.mode.multiple = 0;\n    }\n\n    function selectAll() {\n      _.forEach(Component['$' + vm.componentType], function(component) {\n        component.selected = true;\n      });\n      vm.mode.multiple = Component['$' + vm.componentType].length;\n    }\n\n    function toggleComponentSelection($event, component) {\n      component.selected = !component.selected;\n      vm.mode.multiple += component.selected? 1 : -1;\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function confirmDeleteSelectedComponents() {\n      Dialog.confirm(l('Warning'),\n                     l('Are you sure you want to delete the selected components?'),\n                     { ok: l('Delete') })\n        .then(function() {\n          // User confirmed the deletion\n          var components = _.filter(Component['$' + vm.componentType], function(component) {\n            return component.selected;\n          });\n          Calendar.$deleteComponents(components).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        });\n    }\n\n    function openEvent($event, event) {\n      openComponent($event, event, 'appointment');\n    }\n\n    function openTask($event, task) {\n      openComponent($event, task, 'task');\n    }\n\n    function openComponent($event, component, type) {\n      if (component.viewable) {\n        // UI/Templates/SchedulerUI/UIxAppointmentViewTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskViewTemplate.wox\n        var templateUrl = 'UIx' + type.capitalize() + 'ViewTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: component\n          }\n        });\n      }\n    }\n\n    function newComponent($event, baseComponent) {\n      var type = 'appointment', component;\n\n      if (baseComponent) {\n        component = baseComponent;\n        type = baseComponent.type;\n      }\n      else {\n        if (vm.componentType == 'tasks')\n          type = 'task';\n        component = new Component({ pid: Calendar.$defaultCalendar(), type: type });\n      }\n\n      // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n      // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n      var templateUrl = 'UIx' + type.capitalize() + 'EditorTemplate';\n      return $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: templateUrl,\n        controller: 'ComponentEditorController',\n        controllerAs: 'editor',\n        locals: {\n          stateComponent: component\n        }\n      });\n    }\n\n    // Adjust component or create new component through drag'n'drop\n    function updateComponentFromGhost($event) {\n      var component, pointerHandler, coordinates, delta, params, calendarNumber, activeCalendars;\n\n      component = Component.$ghost.component;\n      pointerHandler = Component.$ghost.pointerHandler;\n\n      if (component.isNew) {\n        coordinates = pointerHandler.currentEventCoordinates;\n        component.summary = '';\n        if (component.isAllDay)\n          coordinates.duration -= 96;\n        component.setDelta(coordinates.duration * 15);\n        newComponent(null, component).finally(function() {\n          $timeout(function() {\n            Component.$resetGhost();\n          });\n        });\n      }\n      else {\n        delta = pointerHandler.currentEventCoordinates.getDelta(pointerHandler.originalEventCoordinates);\n        params = {\n          days: delta.dayNumber,\n          start: delta.start * 15,\n          duration: delta.duration * 15\n        };\n        if (pointerHandler.originalCalendar && delta.dayNumber !== 0) {\n          // The day number actually represents the destination calendar among the active calendars\n          calendarNumber = pointerHandler.currentEventCoordinates.dayNumber;\n          activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n          params.destination = activeCalendars[calendarNumber].id;\n          params.days = 0;\n        }\n        if (component.isException || !component.occurrenceId)\n          // Component is an exception to a recurrence or is not recurrent;\n          // Immediately perform the adjustments\n          component.$adjust(params).then(function() {\n            $rootScope.$emit('calendars:list');\n          }, function(response) {\n            onComponentAdjustError(response, component, params);\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        else if (component.occurrenceId) {\n          $mdDialog.show({\n            clickOutsideToClose: true,\n            escapeToClose: true,\n            locals: {\n              component: component,\n              params: params\n            },\n            template: [\n              '<md-dialog flex=\"50\" sm-flex=\"80\" xs-flex=\"90\">',\n              '  <md-dialog-content class=\"md-dialog-content\">',\n              '    <p>' + l('editRepeatingItem') + '</p>',\n              '  </md-dialog-content>',\n              '  <md-dialog-actions>',\n              '    <md-button ng-click=\"updateThisOccurrence()\">' + l('button_thisOccurrenceOnly') + '</md-button>',\n              '    <md-button ng-click=\"updateAllOccurrences()\">' + l('button_allOccurrences') + '</md-button>',\n              '  </md-dialog-actions>',\n              '</md-dialog>'\n            ].join(''),\n            controller: RecurrentComponentDialogController\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          }).finally(function() {\n            $timeout(function() {\n              Component.$resetGhost();\n            });\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      RecurrentComponentDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params'];\n      function RecurrentComponentDialogController($scope, $mdDialog, component, params) {\n        $scope.updateThisOccurrence = function() {\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n        $scope.updateAllOccurrences = function() {\n          delete component.occurrenceId;\n          component.$adjust(params).then($mdDialog.hide, function(response) {\n            $mdDialog.cancel().then(function() {\n              onComponentAdjustError(response, component, params);\n            });\n          });\n        };\n      }\n\n      function onComponentAdjustError(response, component, params) {\n        if (response.status == 403 &&\n            response.data && response.data.message && angular.isObject(response.data.message)) {\n          $mdDialog.show({\n            parent: angular.element(document.body),\n            clickOutsideToClose: false,\n            escapeToClose: false,\n            templateUrl: 'UIxAttendeeConflictDialog',\n            controller: AttendeeConflictDialogController,\n            controllerAs: '$AttendeeConflictDialogController',\n            locals: {\n              component: component,\n              params: params,\n              conflictError: response.data.message\n            }\n          }).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n        }\n      }\n\n      /**\n       * @ngInject\n       */\n      AttendeeConflictDialogController.$inject = ['$scope', '$mdDialog', 'component', 'params', 'conflictError'];\n      function AttendeeConflictDialogController($scope, $mdDialog, component, params, conflictError) {\n        var vm = this;\n\n        vm.conflictError = conflictError;\n        vm.cancel = $mdDialog.cancel;\n        vm.save = save;\n\n        function save() {\n          component.$adjust(angular.extend({ ignoreConflicts: true }, params)).then($mdDialog.hide);\n        }\n      }\n    }\n\n    function filterpopup() {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup;\n    }\n\n    function filter(filterpopup) {\n      Component.$filter(vm.componentType, { filterpopup: filterpopup });\n    }\n\n    function filteredBy(filterpopup) {\n      return Component['$query' + vm.componentType.capitalize()].filterpopup == filterpopup;\n    }\n\n    function sort(field) {\n      Component.$filter(vm.componentType, { sort: field });\n    }\n\n    function sortedBy(field) {\n      return Component['$query' + vm.componentType.capitalize()].sort == field;\n    }\n\n    function reload() {\n      Calendar.reloadWebCalendars().finally(function() {\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function cancelSearch() {\n      vm.mode.search = false;\n      Component.$filter(vm.componentType, { value: '' });\n    }\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarListController', CalendarListController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  CalendarsController.$inject = ['$rootScope', '$scope', '$window', '$mdDialog', '$log', '$mdToast', 'FileUploader', 'sgFocus', 'Dialog', 'sgSettings', 'Preferences', 'Calendar', 'User', 'stateCalendars'];\n  function CalendarsController($rootScope, $scope, $window, $mdDialog, $log, $mdToast, FileUploader, focus, Dialog, Settings, Preferences, Calendar, User, stateCalendars) {\n    var vm = this;\n\n    vm.activeUser = Settings.activeUser;\n    vm.service = Calendar;\n    vm.newCalendar = newCalendar;\n    vm.addWebCalendar = addWebCalendar;\n    vm.confirmDelete = confirmDelete;\n    vm.editFolder = editFolder;\n    vm.revertEditing = revertEditing;\n    vm.renameFolder = renameFolder;\n    vm.share = share;\n    vm.importCalendar = importCalendar;\n    vm.showOnly = showOnly;\n    vm.showAll = showAll;\n    vm.showLinks = showLinks;\n    vm.showProperties = showProperties;\n    vm.subscribeToFolder = subscribeToFolder;\n    vm.today = today;\n\n    vm.filter = { name: '' };\n    vm.toggleSortableMode = toggleSortableMode;\n    vm.resetSort = resetSort;\n    vm.sortableCalendars = {\n      disabled: true,\n      animation: 150,\n      draggable: 'md-list-item',\n      handle: '.md-menu',\n      ghostClass: 'sg-sortable-ghost',\n      chosenClass: 'sg-sortable-chosen',\n      setData: sortable_setData,\n      onEnd: sortable_onEnd\n    };\n    vm.sortableSubscriptions = angular.copy(vm.sortableCalendars);\n    vm.sortableWebCalendars = angular.copy(vm.sortableCalendars);\n\n    Preferences.ready().then(function() {\n      vm.categories = _.map(Preferences.defaults.SOGoCalendarCategories, function(name) {\n        return { id: name.asCSSIdentifier(),\n                 name: name,\n                 color: Preferences.defaults.SOGoCalendarCategoriesColors[name]\n               };\n      });\n    });\n\n    // Dispatch the event named 'calendars:list' when a calendar is activated or deactivated or\n    // when the color of a calendar is changed\n    $scope.$watch(\n      function() {\n        return _.union(\n          _.map(Calendar.$calendars, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$subscriptions, function(o) { return _.pick(o, ['id', 'active', 'color']); }),\n          _.map(Calendar.$webcalendars, function(o) { return _.pick(o, ['id', 'active', 'color']); })\n        );\n      },\n      function(newList, oldList) {\n        var commonList, ids, promises;\n\n        // Identify which calendar has changed\n        commonList = _.intersectionBy(newList, oldList, 'id');\n        ids = _.map(_.filter(commonList, function(o) {\n          var oldObject = _.find(oldList, { id: o.id });\n          return !_.isEqual(o, oldObject);\n        }), 'id');\n        promises = [];\n\n        if (ids.length > 0) {\n          $log.debug(ids.join(', ') + ' changed');\n          _.forEach(ids, function(id) {\n            var calendar = Calendar.$get(id);\n            promises.push(calendar.$setActivation());\n          });\n        }\n        if (promises.length > 0 || commonList.length != newList.length || commonList.length != oldList.length)\n          Calendar.$q.all(promises).then(function() {\n            $rootScope.$emit('calendars:list');\n          });\n      },\n      true // compare for object equality\n    );\n\n    function sortable_setData(dataTransfer, dragEl) {\n      dataTransfer.clearData();\n    }\n\n    function sortable_onEnd() {\n      Calendar.saveFoldersOrder(_.flatMap(Calendar.$findAll(), 'id'));\n    }\n\n    function toggleSortableMode() {\n      vm.sortableCalendars.disabled = !vm.sortableCalendars.disabled;\n      vm.sortableSubscriptions.disabled = !vm.sortableSubscriptions.disabled;\n      vm.sortableWebCalendars.disabled = !vm.sortableWebCalendars.disabled;\n      vm.filter.name = '';\n    }\n\n    function resetSort() {\n      Calendar.saveFoldersOrder();\n    }\n\n    function newCalendar(ev) {\n      Dialog.prompt(l('New calendar'), l('Name of the Calendar'))\n        .then(function(name) {\n          var calendar = new Calendar(\n            {\n              name: name,\n              isEditable: true,\n              isRemote: false,\n              owner: UserLogin\n            }\n          );\n          calendar.$id().then(function() {\n            Calendar.$add(calendar);\n          });\n        });\n    }\n\n    function addWebCalendar() {\n      Dialog.prompt(l('Subscribe to a web calendar...'), l('URL of the Calendar'), {inputType: 'url'})\n        .then(function(url) {\n          Calendar.$addWebCalendar(url).then(function(calendar) {\n            if (angular.isObject(calendar)) {\n              // Web calendar requires HTTP authentication\n              $mdDialog.show({\n                parent: angular.element(document.body),\n                clickOutsideToClose: true,\n                escapeToClose: true,\n                templateUrl: 'UIxWebCalendarAuthDialog',\n                controller: WebCalendarAuthDialogController,\n                controllerAs: '$WebCalendarAuthDialogController',\n                locals: {\n                  url: url,\n                  calendar: calendar\n                }\n              });\n            }\n          });\n        });\n\n      /**\n       * @ngInject\n       */\n      WebCalendarAuthDialogController.$inject = ['scope', '$mdDialog', 'url', 'calendar'];\n      function WebCalendarAuthDialogController(scope, $mdDialog, url, calendar) {\n        var vm = this,\n            parts = url.split(\"/\"),\n            hostname = parts[2];\n\n        vm.title = l(\"Please identify yourself to %{0}\").formatted(hostname);\n        vm.authenticate = function(form) {\n          if (form.$valid || !form.$error.required) {\n            calendar.setCredentials(vm.username, vm.password).then(function(message) {\n              $mdDialog.hide();\n            }, function(reason) {\n              form.password.$setValidity('credentials', false);\n            });\n          }\n        };\n        vm.cancel = function() {\n          $mdDialog.cancel();\n        };\n      }\n    }\n\n    function confirmDelete(folder) {\n      if (folder.isSubscription) {\n        // Unsubscribe without confirmation\n        folder.$delete()\n          .catch(function(data, status) {\n            Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                         l(data.error));\n          });\n      }\n      else {\n        Dialog.confirm(l('Warning'), l('Are you sure you want to delete the calendar \"%{0}\"?', folder.name),\n                       { ok: l('Delete') })\n          .then(function() {\n            folder.$delete()\n              .catch(function(data, status) {\n                Dialog.alert(l('An error occured while deleting the calendar \"%{0}\".', folder.name),\n                             l(data.error));\n              });\n          });\n      }\n    }\n\n    function importCalendar($event, folder) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        targetEvent: $event,\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: 'UIxCalendarImportDialog',\n        controller: CalendarImportDialogController,\n        controllerAs: '$CalendarImportDialogController',\n        locals: {\n          folder: folder\n        }\n      });\n\n      /**\n       * @ngInject\n       */\n      CalendarImportDialogController.$inject = ['scope', '$mdDialog', 'folder'];\n      function CalendarImportDialogController(scope, $mdDialog, folder) {\n        var vm = this;\n\n        vm.uploader = new FileUploader({\n          url: ApplicationBaseURL + [folder.id, 'import'].join('/'),\n          autoUpload: true,\n          queueLimit: 1,\n          filters: [{ name: filterByExtension, fn: filterByExtension }],\n          onSuccessItem: function(item, response, status, headers) {\n            var msg;\n\n            $mdDialog.hide();\n\n            if (response.imported === 0)\n              msg = l('No event was imported.');\n            else {\n              msg = l('A total of %{0} events were imported in the calendar.', response.imported);\n              $rootScope.$emit('calendars:list');\n            }\n\n            $mdToast.show(\n              $mdToast.simple()\n                .content(msg)\n                .position('top right')\n                .hideDelay(3000));\n          },\n          onErrorItem: function(item, response, status, headers) {\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('An error occurred while importing calendar.') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n          }\n        });\n\n        vm.close = function() {\n          $mdDialog.hide();\n        };\n\n        function filterByExtension(item) {\n          var isTextFile = item.type.indexOf('text') === 0 ||\n              /\\.(ics)$/.test(item.name);\n\n          if (!isTextFile)\n            $mdToast.show({\n              template: [\n                '<md-toast>',\n                '  <div class=\"md-toast-content\">',\n                '    <md-icon class=\"md-warn md-hue-1\">error_outline</md-icon>',\n                '    <span>' + l('Select an iCalendar file (.ics).') + '</span>',\n                '  </div>',\n                '</md-toast>'\n              ].join(''),\n              position: 'top right',\n              hideDelay: 3000\n            });\n\n          return isTextFile;\n        }\n      }\n    }\n\n    function showOnly(calendar) {\n      _.forEach(Calendar.$findAll(), function(o) {\n        if (calendar.id == o.id)\n          o.active = 1;\n        else\n          o.active = 0;\n      });\n    }\n\n    function showAll() {\n      _.forEach(Calendar.$findAll(), function(o) { o.active = 1; });\n    }\n\n    function showLinks(calendar) {\n      $mdDialog.show({\n        parent: angular.element(document.body),\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        templateUrl: calendar.id + '/links',\n        controller: LinksDialogController,\n        controllerAs: 'links',\n        locals: {\n          calendar: calendar\n        }\n      });\n      \n      /**\n       * @ngInject\n       */\n      LinksDialogController.$inject = ['$mdDialog', 'calendar'];\n      function LinksDialogController($mdDialog, calendar) {\n        var vm = this;\n        vm.calendar = calendar;\n        vm.close = close;\n\n        function close() {\n          $mdDialog.hide();\n        }\n      }\n    }\n\n    function showProperties(calendar) {\n      var color = calendar.color;\n      $mdDialog.show({\n        templateUrl: calendar.id + '/properties',\n        controller: PropertiesDialogController,\n        controllerAs: 'properties',\n        clickOutsideToClose: true,\n        escapeToClose: true,\n        locals: {\n          srcCalendar: calendar\n        }\n      }).catch(function() {\n        // Restore original color when cancelling or closing the dialog\n        calendar.color = color;\n      });\n      \n      /**\n       * @ngInject\n       */\n      PropertiesDialogController.$inject = ['$scope', '$mdDialog', 'srcCalendar'];\n      function PropertiesDialogController($scope, $mdDialog, srcCalendar) {\n        var vm = this;\n\n        vm.calendar = new Calendar(srcCalendar.$omit());\n        vm.saveProperties = saveProperties;\n        vm.close = close;\n\n        $scope.$watch('properties.calendar.color', function() {\n          srcCalendar.color = vm.calendar.color;\n        });\n\n        function saveProperties() {\n          vm.calendar.$save();\n          // Refresh list instance\n          srcCalendar.init(vm.calendar.$omit());\n          $mdDialog.hide();\n        }\n\n        function close() {\n          $mdDialog.cancel();\n        }\n      }\n    }\n\n    function editFolder(folder) {\n      vm.calendarName = folder.name;\n      vm.editMode = folder.id;\n      focus('calendarName_' + folder.id);\n    }\n\n    function revertEditing(folder) {\n      folder.$reset();\n      vm.editMode = false;\n    }\n\n    function renameFolder(folder) {\n      folder.$rename()\n        .then(function(data) {\n          vm.editMode = false;\n        });\n    }\n\n    function share(calendar) {\n      calendar.$acl.$users().then(function() {\n        $mdDialog.show({\n          templateUrl: calendar.id + '/UIxAclEditor', // UI/Templates/UIxAclEditor.wox\n          controller: 'AclController', // from the ng module SOGo.Common\n          controllerAs: 'acl',\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          locals: {\n            usersWithACL: calendar.$acl.users,\n            User: User,\n            folder: calendar\n          }\n        });\n      });\n    }\n\n    // Callback of sgSubscribe directive\n    function subscribeToFolder(calendarData) {\n      $log.debug('subscribeToFolder ' + calendarData.owner + calendarData.name);\n      Calendar.$subscribe(calendarData.owner, calendarData.name).then(function(data) {\n         $mdToast.show(\n           $mdToast.simple()\n             .content(l('Successfully subscribed to calendar'))\n             .position('top right')\n             .hideDelay(3000));\n      });\n    }\n\n    function today() {\n      var fragments = $window.location.hash.split('/'),\n          state = fragments[1],\n          view = fragments[2],\n          now = new Date(),\n          path = ['#', state, view, now.getDayString()];\n      $window.location = path.join('/');\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('CalendarsController', CalendarsController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /**\n   * @ngInject\n   */\n  ComponentController.$inject = ['$rootScope', '$mdDialog', 'Calendar', 'Component', 'AddressBook', 'Alarm', 'Account', 'stateComponent'];\n  function ComponentController($rootScope, $mdDialog, Calendar, Component, AddressBook, Alarm, Account, stateComponent) {\n    var vm = this, component;\n\n    vm.calendarService = Calendar;\n    vm.service = Component;\n    vm.component = stateComponent;\n    vm.close = close;\n    vm.cardFilter = cardFilter;\n    vm.newMessageWithAllRecipients = newMessageWithAllRecipients;\n    vm.newMessageWithRecipient = newMessageWithRecipient;\n    vm.edit = edit;\n    vm.editAllOccurrences = editAllOccurrences;\n    vm.reply = reply;\n    vm.replyAllOccurrences = replyAllOccurrences;\n    vm.deleteOccurrence = deleteOccurrence;\n    vm.deleteAllOccurrences = deleteAllOccurrences;\n    vm.toggleRawSource = toggleRawSource;\n    vm.copySelectedComponent = copySelectedComponent;\n    vm.moveSelectedComponent = moveSelectedComponent;\n\n    // Load all attributes of component\n    if (angular.isUndefined(vm.component.$futureComponentData)) {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id, vm.component.occurrenceId);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        vm.organizer = [vm.component.organizer];\n      });\n    }\n\n    function close() {\n      $mdDialog.hide();\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function newMessageWithAllRecipients($event) {\n      var recipients = _.map(vm.component.attendees, function(attendee) {\n        return attendee.name + \" <\" + attendee.email + \">\";\n      });\n      _newMessage($event, recipients);\n    }\n\n    function newMessageWithRecipient($event, name, email) {\n      _newMessage($event, [name + \" <\" + email + \">\"]);\n    }\n\n    function _newMessage($event, recipients) {\n      Account.$findAll().then(function(accounts) {\n        var account = _.find(accounts, function(o) {\n          if (o.id === 0)\n            return o;\n        });\n\n        // We must initialize the Account with its mailbox\n        // list before proceeding with message's creation\n        account.$getMailboxes().then(function(mailboxes) {\n          account.$newMessage().then(function(message) {\n            angular.extend(message.editable, { to: recipients, subject: vm.component.summary });\n            $mdDialog.show({\n              parent: angular.element(document.body),\n              targetEvent: $event,\n              clickOutsideToClose: false,\n              escapeToClose: false,\n              templateUrl: '../Mail/UIxMailEditor',\n              controller: 'MessageEditorController',\n              controllerAs: 'editor',\n              locals: {\n                stateAccount: account,\n                stateMessage: message\n              }\n            });\n          });\n        });\n      });\n\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    function edit() {\n      var type = (vm.component.component == 'vevent')? 'Appointment':'Task';\n      $mdDialog.hide().then(function() {\n        // UI/Templates/SchedulerUI/UIxAppointmentEditorTemplate.wox or\n        // UI/Templates/SchedulerUI/UIxTaskEditorTemplate.wox\n        var templateUrl = 'UIx' + type + 'EditorTemplate';\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          templateUrl: templateUrl,\n          controller: 'ComponentEditorController',\n          controllerAs: 'editor',\n          locals: {\n            stateComponent: vm.component\n          }\n        });\n      });\n    }\n\n    function editAllOccurrences() {\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        vm.component = component;\n        edit();\n      });\n    }\n\n    function reply(component) {\n      var c = component || vm.component;\n\n      c.$reply().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n        Alarm.getAlarms();\n      });\n    }\n\n    function replyAllOccurrences() {\n      // Retrieve master event\n      component = Calendar.$get(vm.component.pid).$getComponent(vm.component.id);\n      component.$futureComponentData.then(function() {\n        // Propagate the participant status and alarm to the master event\n        component.reply = vm.component.reply;\n        component.delegatedTo = vm.component.delegatedTo;\n        component.$hasAlarm = vm.component.$hasAlarm;\n        component.alarm = vm.component.alarm;\n        // Send reply to the server\n        reply(component);\n      });\n    }\n\n    function deleteOccurrence() {\n      vm.component.remove(true).then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function deleteAllOccurrences() {\n      vm.component.remove().then(function() {\n        $rootScope.$emit('calendars:list');\n        $mdDialog.hide();\n      });\n    }\n\n    function toggleRawSource($event) {\n      Calendar.$$resource.post(vm.component.pid + '/' + vm.component.id, \"raw\").then(function(data) {\n        $mdDialog.hide();\n        $mdDialog.show({\n          parent: angular.element(document.body),\n          targetEvent: $event,\n          clickOutsideToClose: true,\n          escapeToClose: true,\n          template: [\n            '<md-dialog flex=\"40\" flex-sm=\"80\" flex-xs=\"100\" aria-label=\"' + l('View Raw Source') + '\">',\n            '  <md-dialog-content class=\"md-dialog-content\">',\n            '    <pre>',\n            data,\n            '    </pre>',\n            '  </md-dialog-content>',\n            '  <md-dialog-actions>',\n            '    <md-button ng-click=\"close()\">' + l('Close') + '</md-button>',\n            '  </md-dialog-actions>',\n            '</md-dialog>'\n          ].join(''),\n          controller: ComponentRawSourceDialogController\n        });\n\n        /**\n         * @ngInject\n         */\n        ComponentRawSourceDialogController.$inject = ['scope', '$mdDialog'];\n        function ComponentRawSourceDialogController(scope, $mdDialog) {\n          scope.close = function() {\n            $mdDialog.hide();\n          };\n        }\n      });\n    }\n\n    function copySelectedComponent(calendar) {\n      vm.component.copyTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n\n    function moveSelectedComponent(calendar) {\n      vm.component.moveTo(calendar).then(function() {\n        $mdDialog.hide();\n        $rootScope.$emit('calendars:list');\n      });\n    }\n  }\n\n  /**\n   * @ngInject\n   */\n  ComponentEditorController.$inject = ['$rootScope', '$scope', '$log', '$timeout', '$mdDialog', 'User', 'Calendar', 'Component', 'AddressBook', 'Card', 'Alarm', 'stateComponent'];\n  function ComponentEditorController($rootScope, $scope, $log, $timeout, $mdDialog, User, Calendar, Component, AddressBook, Card, Alarm, stateComponent) {\n    var vm = this, component, oldStartDate, oldEndDate, oldDueDate;\n\n    vm.service = Calendar;\n    vm.component = stateComponent;\n    vm.categories = {};\n    vm.showRecurrenceEditor = vm.component.$hasCustomRepeat;\n    vm.toggleRecurrenceEditor = toggleRecurrenceEditor;\n    vm.showAttendeesEditor = angular.isDefined(vm.component.attendees);\n    vm.toggleAttendeesEditor = toggleAttendeesEditor;\n    //vm.searchText = null;\n    vm.cardFilter = cardFilter;\n    vm.addAttendee = addAttendee;\n    vm.removeAttendee = removeAttendee;\n    vm.addAttachUrl = addAttachUrl;\n    vm.priorityLevel = priorityLevel;\n    vm.cancel = cancel;\n    vm.save = save;\n    vm.attendeeConflictError = false;\n    vm.attendeesEditor = {\n      days: getDays(),\n      hours: getHours()\n    };\n    vm.addStartDate = addStartDate;\n    vm.addDueDate = addDueDate;\n\n    // Synchronize start and end dates\n    vm.updateStartTime = updateStartTime;\n    vm.adjustStartTime = adjustStartTime;\n    vm.updateEndTime = updateEndTime;\n    vm.adjustEndTime = adjustEndTime;\n    vm.updateDueTime = updateDueTime;\n    vm.adjustDueTime = adjustDueTime;\n\n    if (vm.component.start)\n      oldStartDate = new Date(vm.component.start.getTime());\n    if (vm.component.end)\n      oldEndDate = new Date(vm.component.end.getTime());\n    if (vm.component.due)\n      oldDueDate = new Date(vm.component.due.getTime());\n\n    function addAttachUrl() {\n      var i = vm.component.addAttachUrl('');\n      focus('attachUrl_' + i);\n    }\n\n    function toggleRecurrenceEditor() {\n      vm.showRecurrenceEditor = !vm.showRecurrenceEditor;\n      vm.component.$hasCustomRepeat = vm.showRecurrenceEditor;\n    }\n\n    function toggleAttendeesEditor() {\n      vm.showAttendeesEditor = !vm.showAttendeesEditor;\n    }\n\n    // Autocomplete cards for attendees\n    function cardFilter($query) {\n      AddressBook.$filterAll($query);\n      return AddressBook.$cards;\n    }\n\n    function addAttendee(card) {\n      if (angular.isString(card)) {\n        // User pressed \"Enter\" in search field, adding a non-matching card\n        if (card.isValidEmail()) {\n          vm.component.addAttendee(new Card({ emails: [{ value: card }] }));\n          vm.searchText = '';\n        }\n      }\n      else {\n        vm.component.addAttendee(card);\n      }\n    }\n\n    function removeAttendee(attendee) {\n      vm.component.deleteAttendee(attendee);\n      if (vm.component.attendees.length === 0)\n        vm.showAttendeesEditor = false;\n    }\n\n    function priorityLevel() {\n      if (vm.component && vm.component.priority) {\n        if (vm.component.priority > 5)\n          return l('low');\n        else if (vm.component.priority > 4)\n          return l('normal');\n        else\n          return l('high');\n      }\n    }\n\n    function save(form, options) {\n      if (form.$valid) {\n        vm.component.$save(options)\n          .then(function(data) {\n            $rootScope.$emit('calendars:list');\n            $mdDialog.hide();\n            Alarm.getAlarms();\n          }, function(response) {\n            if (response.status == 403 &&\n                response.data && response.data.message &&\n                angular.isObject(response.data.message))\n              vm.attendeeConflictError = response.data.message;\n          });\n      }\n    }\n\n    function cancel() {\n      vm.component.$reset();\n      if (vm.component.isNew) {\n        // Cancelling the creation of a component\n        vm.component = null;\n      }\n      $mdDialog.cancel();\n    }\n\n    function getDays() {\n      var days = [];\n\n      if (vm.component.start && vm.component.end)\n        days = vm.component.start.daysUpTo(vm.component.end);\n\n      return _.map(days, function(date) {\n        return { stringWithSeparator: date.stringWithSeparator(),\n                 getDayString: date.getDayString() };\n      });\n    }\n\n    function getHours() {\n      var hours = [];\n      for (var i = 0; i <= 23; i++) {\n        hours.push(i.toString());\n      }\n      return hours;\n    }\n\n    function addStartDate() {\n      vm.component.$addStartDate();\n      oldStartDate = new Date(vm.component.start.getTime());\n    }\n\n    function addDueDate() {\n      vm.component.$addDueDate();\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateStartTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.start.addMinutes(oldStartDate.getHours() * 60 + oldStartDate.getMinutes());\n      adjustStartTime();\n    }\n\n    function adjustStartTime() {\n      if (vm.component.start) {\n        // Preserve the delta between the start and end dates\n        var delta;\n        delta = oldStartDate.valueOf() - vm.component.start.valueOf();\n        if (delta !== 0) {\n          oldStartDate = new Date(vm.component.start.getTime());\n          if (vm.component.type === 'appointment') {\n            vm.component.end = new Date(vm.component.start.getTime());\n            vm.component.end.addMinutes(vm.component.delta);\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateEndTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.end.addMinutes(oldEndDate.getHours() * 60 + oldEndDate.getMinutes());\n      adjustEndTime();\n    }\n\n    function adjustEndTime() {\n      if (vm.component.end) {\n        // The end date must be after the start date\n        var delta = oldEndDate.valueOf() - vm.component.end.valueOf();\n        if (delta !== 0) {\n          delta = vm.component.start.minutesTo(vm.component.end);\n          if (delta < 0)\n            vm.component.end = new Date(oldEndDate.getTime());\n          else {\n            vm.component.delta = delta;\n            oldEndDate = new Date(vm.component.end.getTime());\n          }\n          updateFreeBusy();\n        }\n      }\n    }\n\n    function updateDueTime() {\n      // When using the datepicker, the time is reset to 00:00; restore it\n      vm.component.due.addMinutes(oldDueDate.getHours() * 60 + oldDueDate.getMinutes());\n      adjustDueTime();\n    }\n\n    function adjustDueTime() {\n      oldDueDate = new Date(vm.component.due.getTime());\n    }\n\n    function updateFreeBusy() {\n      vm.attendeesEditor.days = getDays();\n      vm.component.updateFreeBusy();\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .controller('ComponentController', ComponentController)\n    .controller('ComponentEditorController', ComponentEditorController);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarDay - An element that represents a day in the calendar's view\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {string} sgDay - the day of the events to display (YYYYMMDD)\n   * @param {string} sgDayString - the day in ISO8601 format (YYYY-MM-DDTHH:MM+-HH:MM)\n   * @param {number} sgDayNumber - the day index within the calendar's view\n   *\n   * @example:\n\n   <sg-calendar-day\n       sg-day-string=\"2015-11-01T00:00-05:00\"\n       sg-day-number=\"0\"\n       sg-day=\"20151101\">\n     ..\n   </sg-calendar-day-table>\n  */\n  function sgCalendarDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        day: '@sgDay',\n        dayNumber: '@sgDayNumber',\n        dayString: '@sgDayString',\n        calendar: '@sgCalendar'\n      },\n      controller: sgCalendarDayController\n    };\n  }\n\n  /**\n   * @ngInject\n   */\n  sgCalendarDayController.$inject = ['$scope', 'Calendar'];\n  function sgCalendarDayController($scope, Calendar) {\n    // Expose some scope variables to the controller\n    // See the sgCalendarDayTable directive\n    this.day = $scope.day;\n    this.dayNumber = $scope.dayNumber;\n    this.dayString = $scope.dayString;\n    this.calendarData = function() {\n      var pid, index, activeCalendars;\n      if ($scope.calendar) {\n        // A calendar is associated to the day; identify its index among active calendars\n        pid = $scope.calendar;\n        activeCalendars = _.filter(Calendar.$findAll(), { active: 1 });\n        index = _.findIndex(activeCalendars, function(calendar) {\n          return calendar.id == pid;\n        });\n        return { pid: pid, index: index };\n      }\n\n      return null;\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDay', sgCalendarDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayBlock - An event block to be displayed in a week\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: clickEvent (the event that triggered the mouse click),\n   *        and clickComponent (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-block\n      ng-repeat=\"block in blocks[day]\"\n      sg-block=\"block\"\n      sg-click=\"open(clickEvent, clickComponent)\" />\n  */\n  sgCalendarDayBlock.$inject = ['CalendarSettings'];\n  function sgCalendarDayBlock(CalendarSettings) {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\">',\n        '  <div class=\"eventInside\"',\n        '       ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        //   Categories color stripes\n        '    <div class=\"sg-category\" ng-repeat=\"category in '+p+'block.component.categories\"',\n        '         ng-class=\"\\'bg-category\\' + category\"',\n        '         ng-style=\"{ right: ($index * 3) + \\'px\\' }\"></div>',\n        '    <div class=\"text\">',\n        //     Priority\n        '      <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        //     Summary\n        '      {{ '+p+'block.component.summary }}',\n        '      <span class=\"icons\">',\n        //       Component is reccurent\n        '        <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //       Component has an alarm\n        '        <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //       Component is confidential\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //       Component is private\n        '        <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '      </span>',\n        //     Location\n        '      <div class=\"secondary\" ng-if=\"'+p+'block.component.c_location\">',\n        '        <md-icon>place</md-icon> {{'+p+'block.component.c_location}}',\n        '      </div>',\n        '    </div>',\n        '  </div>',\n        '  <div class=\"ghostStartHour\" ng-if=\"block.startHour\">{{ block.startHour }}</div>',\n        '  <div class=\"ghostEndHour\" ng-if=\"block.endHour\">{{ block.endHour }}</div>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      var pc, left, right;\n\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Compute overlapping (2%)\n        pc = 100 / scope.block.siblings;\n        left = scope.block.position * pc;\n        right = 100 - (scope.block.position + 1) * pc;\n        if (pc < 100) {\n          if (left > 0)\n            left -= 2;\n          if (right > 0)\n            right -= 2;\n        }\n\n        // Add some padding (2%)\n        if (left === 0)\n          left = 2;\n        if (right === 0)\n          right = 2;\n\n        // Set position\n        iElement.css('left', left + '%');\n        iElement.css('right', right + '%');\n        if (!scope.block.component || !scope.block.component.c_isallday) {\n          iElement.addClass('starts' + scope.block.start);\n          iElement.addClass('lasts' + scope.block.length);\n        }\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n          iElement.addClass('contrast-bdr-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayBlock', sgCalendarDayBlock);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarDayTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-block',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarDayTable', sgCalendarDayTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarBlock - Applied to an event ghost block to be displayed while dragging an event block. Each day of the\n   *   calendar's view must have a ghost block.\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   *\n   * @example:\n\n   <sg-calendar-day-block\n     sg-calendar-ghost\n     sg-block=\"list.component.$ghost\">/\n  */\n  sgCalendarGhost.$inject = ['$rootScope', '$timeout', 'CalendarSettings', 'Calendar', 'Component'];\n  function sgCalendarGhost($rootScope, $timeout, CalendarSettings, Calendar, Component) {\n    return {\n      restrict: 'A',\n      require: ['^sgCalendarDay', '^sgCalendarScrollView'],\n      link: link\n    };\n\n    function link(scope, iElement, attrs, ctrls) {\n      var domElement, calendarDayCtrl, scrollViewCtrl, calendarNumber, originalCalendarNumber;\n\n      domElement = iElement[0];\n      calendarDayCtrl = ctrls[0];\n      scrollViewCtrl = ctrls[1];\n      calendarNumber = -1;\n\n      iElement.addClass('sg-event--ghost md-whiteframe-3dp ng-hide');\n\n      // Listen on drag gestures\n      var deregisterDragStart = $rootScope.$on('calendar:dragstart', initGhost);\n      var deregisterDrag = $rootScope.$on('calendar:drag', updateGhost);\n      var deregisterDragEnd = $rootScope.$on('calendar:dragend', hideGhost);\n\n      // Deregister listeners on destroy\n      scope.$on('$destroy', function() {\n        deregisterDragStart();\n        deregisterDrag();\n        deregisterDragEnd();\n      });\n\n      function initGhost() {\n        var pid, calendarData, userState;\n\n        // Expose ghost block to the scope\n        scope.block = Component.$ghost;\n\n        calendarData = calendarDayCtrl.calendarData();\n        if (calendarData) {\n          // A calendar is associated to the day; this is a special multicolumn day view\n          calendarNumber = calendarData.index;\n          pid = calendarData.pid;\n          originalCalendarNumber = scope.block.pointerHandler.originalCalendar.index;\n        }\n\n        if (!pid)\n          pid = scope.block.component.pid;\n\n        // Add class for user's participation state\n        userState = scope.block.component.blocks[0].userState;\n        if (userState)\n          iElement.addClass('sg-event--' + userState);\n\n        // Set background color\n        iElement.addClass('bg-folder' + pid);\n      }\n\n      function hideGhost() {\n        // Remove background color\n        _.forEachRight(domElement.classList, function(c) {\n          if (/^bg-folder/.test(c))\n            iElement.removeClass(c);\n        });\n        // Hide ghost\n        iElement.addClass('ng-hide');\n      }\n\n      function updateGhost() {\n        // From SOGoEventDragGhostController._updateGhosts\n        var showGhost, isRelative, currentDay, wasOtherBlock,\n            start, duration, durationLeft, maxDuration, enableTransition;\n\n        showGhost = false;\n        enableTransition = function() {\n          iElement.removeClass('sg-event--notransition');\n        };\n\n        if (Calendar.$view && Calendar.$view.type == scrollViewCtrl.type) {\n          // The view of the dragging block is the scrolling view of this ghost block\n\n          isRelative   = scrollViewCtrl.type === 'multiday-allday';\n          currentDay   = scope.block.pointerHandler.currentEventCoordinates.dayNumber;\n          start        = scope.block.pointerHandler.currentEventCoordinates.start;\n          durationLeft = scope.block.pointerHandler.currentEventCoordinates.duration;\n          maxDuration  = CalendarSettings.EventDragDayLength - start;\n\n          if (angular.isUndefined(durationLeft))\n            return;\n          duration = durationLeft;\n          if (duration > maxDuration)\n            duration = maxDuration;\n\n          if (currentDay > -1 &&                                 // pointer is inside viewport\n              ((calendarNumber < 0 &&                            // day is not associated to a calendar\n                currentDay == calendarDayCtrl.dayNumber) ||      // pointer is inside ghost's day\n               currentDay == calendarNumber &&                   // pointer is inside ghost's calendar\n               (originalCalendarNumber == calendarNumber ||      // still inside original calendar\n                !scope.block.component.isException)              // not an exception, event can be moved to a\n                                                                 // different calendar\n              )) {\n            // This ghost block (day) is the first of the dragging event\n            showGhost = true;\n            if (!isRelative) {\n              // Show start hour and set the vertical position\n              scope.block.startHour = getStartTime(start);\n              wasOtherBlock = parseInt(iElement.css('top')) === 0;\n              if (wasOtherBlock)\n                iElement.addClass('sg-event--notransition');\n              // Set the height\n              if (Calendar.$view.quarterHeight) {\n                iElement.css('top', (start * Calendar.$view.quarterHeight) + 'px');\n                iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n              }\n              else\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n              if (wasOtherBlock)\n                $timeout(enableTransition);\n            }\n            iElement.removeClass('fg-folder' + scope.block.component.pid);\n            iElement.removeClass('sg-event--ghost--last');\n            iElement.addClass('sg-event--ghost--first');\n          }\n\n          durationLeft -= duration;\n          currentDay++;\n\n          // Search a subsequent block that matches the current ghost's day\n          while (!showGhost && durationLeft && currentDay <= calendarDayCtrl.dayNumber) {\n            duration = durationLeft;\n            if (duration > CalendarSettings.EventDragDayLength)\n              duration = CalendarSettings.EventDragDayLength;\n            if (currentDay > -1 && currentDay == calendarDayCtrl.dayNumber) {\n              // The dragging event overlaps this current ghost's day\n              showGhost = true;\n              if (!isRelative) {\n                wasOtherBlock = parseInt(iElement.css('top')) !== 0;\n                if (wasOtherBlock)\n                  iElement.addClass('sg-event--notransition');\n                iElement.css('top', Calendar.$view.topOffset + 'px');\n                // Set the height\n                if (Calendar.$view.quarterHeight)\n                  iElement.css('height', (duration * Calendar.$view.quarterHeight) + 'px');\n                if (wasOtherBlock)\n                  $timeout(enableTransition);\n              }\n              iElement.removeClass('sg-event--ghost--first');\n              iElement.removeClass('sg-event--ghost--last');\n              // Trick for all-day events: set the foreground color to the background color so the event's title\n              // is not visible but the div size remains identical.\n              iElement.addClass('fg-folder' + scope.block.component.pid);\n            }\n            durationLeft -= duration;\n            currentDay++;\n            start = 0;\n          }\n          if (!durationLeft) {\n            // Reached last ghost block\n            if (isRelative) {\n              iElement.addClass('sg-event--ghost--last');\n            }\n            else {\n              // Set the end date\n              scope.block.endHour = getEndTime(start, duration);\n            }\n          }\n        }\n\n        if (showGhost)\n          iElement.removeClass('ng-hide');\n        else\n          iElement.addClass('ng-hide');\n      }\n\n      function quartersToHM(quarters) {\n        var minutes, hours, mins;\n\n        minutes = quarters * 15;\n        hours = Math.floor(minutes / 60);\n        if (hours < 10)\n            hours = \"0\" + hours;\n        mins = minutes % 60;\n        if (mins < 10)\n            mins = \"0\" + mins;\n\n        return \"\" + hours + \":\" + mins;\n      }\n\n      function getStartTime(start) {\n        return quartersToHM(start);\n      }\n\n      function getEndTime(start, duration) {\n        var end = (start + duration) % CalendarSettings.EventDragDayLength;\n        return quartersToHM(end);\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarGhost', sgCalendarGhost);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthDay - Build list of blocks for a specific day in a month\n   * @memberof SOGo.SchedulerUI\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-monh-day\n      sg-blocks=\"calendar.blocks\"\n      sg-day=\"20150408\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarMonthDay() {\n    return {\n      restrict: 'E',\n      scope: {\n        blocks: '=sgBlocks',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-month-event',\n        '  class=\"sg-draggable-calendar-block\"',\n        '  ng-repeat=\"block in blocks[day]\"',\n        '  sg-block=\"block\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthDay', sgCalendarMonthDay);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarMonthEvent - An event block to be displayed in a month\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlock - the event block definition\n   * @ngInject\n   * @example:\n\n   <sg-calendar-month-event\n       ng-repeat=\"block in blocks[day]\"\n       sg-block=\"block\"/>\n  */\n  function sgCalendarMonthEvent() {\n    return {\n      restrict: 'E',\n      scope: {\n        block: '=sgBlock',\n        clickBlock: '&sgClick'\n      },\n      replace: true,\n      template: template,\n      link: link\n    };\n\n    function template(tElem, tAttrs) {\n      var p = _.has(tAttrs, 'sgCalendarGhost')? '' : '::';\n\n      return [\n        '<div class=\"sg-event\"',\n        //    Add a class while dragging\n        '     ng-class=\"{\\'sg-event--dragging\\': block.dragging}\"',\n        '     ng-click=\"clickBlock({clickEvent: $event, clickComponent: block.component})\">',\n        '  <span class=\"secondary\" ng-if=\"'+p+'!block.component.c_isallday\">{{ '+p+'block.starthour }}</span>',\n        //     Priority\n        '  <span ng-show=\"'+p+'block.component.c_priority\" class=\"sg-priority\">{{'+p+'block.component.c_priority}}</span>',\n        // Summary\n        '  {{ '+p+'block.component.summary }}',\n        '  <span class=\"icons\">',\n        //   Component is reccurent\n        '    <md-icon ng-if=\"'+p+'block.component.occurrenceId\" class=\"material-icons icon-repeat\"></md-icon>',\n        //   Component has an alarm\n        '    <md-icon ng-if=\"'+p+'block.component.c_nextalarm\" class=\"material-icons icon-alarm\"></md-icon>',\n        //   Component is confidential\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 2\" class=\"material-icons icon-visibility-off\"></md-icon>',\n        //   Component is private\n        '    <md-icon ng-if=\"'+p+'block.component.c_classification == 1\" class=\"material-icons icon-vpn-key\"></md-icon>',\n        '  </span>',\n        '</div>'\n      ].join('');\n    }\n\n    function link(scope, iElement, attrs) {\n      if (!_.has(attrs, 'sgCalendarGhost')) {\n\n        // Add class for user's participation state\n        if (scope.block.userState)\n          iElement.addClass('sg-event--' + scope.block.userState);\n\n        if (scope.block.component) {\n          // Set background color\n          iElement.addClass('bg-folder' + scope.block.component.pid);\n\n          // Add class for transparency\n          if (scope.block.component.c_isopaque === 0)\n            iElement.addClass('sg-event--transparent');\n        }\n\n      }\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarMonthEvent', sgCalendarMonthEvent);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCalendarScrollView - scrollable view that contains draggable elements\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {string} sgCalendarScrollView - the view type (multiday, multiday-allday, or monthly)\n   *\n   * @example:\n\n   <md-content sg-calendar-scroll-view=\"multiday\">\n     ..\n   </md-content>\n  */\n  sgCalendarScrollView.$inject = ['$rootScope', '$window', '$document', '$q', '$timeout', '$mdGesture', 'Calendar', 'Component', 'Preferences'];\n  function sgCalendarScrollView($rootScope, $window, $document, $q, $timeout, $mdGesture, Calendar, Component, Preferences) {\n    return {\n      restrict: 'A',\n      scope: {\n        type: '@sgCalendarScrollView'\n      },\n      controller: sgCalendarScrollViewController,\n      link: function(scope, element, attrs, controller) {\n        var view, scrollView, type, lastScroll, days, deregisterDragStart, deregisterDragStop;\n\n        view = null;\n        scrollView = element[0];\n        type = scope.type; // multiday, multiday-allday, monthly, unknown?\n        lastScroll = 0;\n        days = null;\n\n        // Listen to dragstart and dragend events\n        deregisterDragStart = $rootScope.$on('calendar:dragstart', onDragStart);\n        deregisterDragStop = $rootScope.$on('calendar:dragend', onDragEnd);\n\n        // Update the \"view\" object literal once the Angular template has been transformed\n        $timeout(initView);\n\n        // Deregister listeners when destroying the view\n        scope.$on('$destroy', function() {\n          deregisterDragStart();\n          deregisterDragStop();\n          element.off('mouseover', updateFromPointerHandler);\n          angular.element($window).off('resize', updateCoordinates);\n        });\n\n        function initView() {\n          var quarterHeight;\n\n          // Quarter height doesn't change if window is resize; compute it only once\n          quarterHeight = getQuarterHeight();\n\n          view = {\n            type: type,\n            quarterHeight: quarterHeight,\n            scrollStep: 6 * quarterHeight,\n            dayNumbers: getDayNumbers(),\n            maxX: getMaxColumns(),\n\n            // Expose a reference of the view element\n            element: scrollView\n          };\n\n          // Compute coordinates of view element; recompute it on window resize\n          angular.element($window).on('resize', updateCoordinates);\n          updateCoordinates();\n\n          if (type != 'monthly')\n            // Scroll to the day start hour defined in the user's defaults\n            Preferences.ready().then(function() {\n              var time, hourCell, quartersOffset;\n              if (Preferences.defaults.SOGoDayStartTime) {\n                time = Preferences.defaults.SOGoDayStartTime.split(':');\n                hourCell = document.getElementById('hour' + parseInt(time[0]));\n                quartersOffset = parseInt(time[1]) * quarterHeight;\n                scrollView.scrollTop = hourCell.offsetTop + quartersOffset;\n              }\n            });\n        }\n\n        function getQuarterHeight() {\n          var hour0, hour23, height = null;\n\n          hour0 = document.getElementById('hour0');\n          hour23 = document.getElementById('hour23');\n          if (hour0 && hour23)\n            height = ((hour23.offsetTop - hour0.offsetTop) / (23 * 4));\n\n          return height;\n        }\n\n        function getDayDimensions(viewLeft) {\n          var width, height, leftOffset, topOffset, nodes, domRect, tileHeader;\n\n          height = width = leftOffset = topOffset = 0;\n          nodes = scrollView.getElementsByClassName('day');\n\n          if (nodes.length > 0) {\n            domRect = nodes[0].getBoundingClientRect();\n            height = domRect.height;\n            width = domRect.width;\n            leftOffset = domRect.left - viewLeft;\n            tileHeader = nodes[0].getElementsByClassName('sg-calendar-tile-header');\n            if (tileHeader.length > 0)\n              topOffset = tileHeader[0].clientHeight;\n          }\n\n          return { height: height, width: width, offset: { left: leftOffset, top: topOffset } };\n        }\n\n        function getDayNumbers() {\n          var viewType = null, isMultiColumn, days, total, sum;\n\n          if (scrollView.attributes['sg-view'])\n            viewType = scrollView.attributes['sg-view'].value;\n          isMultiColumn = (viewType == 'multicolumndayview');\n          days = scrollView.getElementsByTagName('sg-calendar-day');\n\n          return _.map(days, function(element, index) {\n            if (isMultiColumn)\n              return index;\n            else\n              return parseInt(element.attributes['sg-day-number'].value);\n          });\n        }\n\n        function getMaxColumns() {\n          var mdGridList, max = 0;\n\n          if (type == 'monthly') {\n            mdGridList = scrollView.getElementsByTagName('md-grid-list')[0];\n            max = parseInt(mdGridList.attributes['md-cols'].value) - 1;\n          }\n          else {\n            max = scrollView.getElementsByClassName('day').length - 1;\n          }\n\n          return max;\n        }\n\n        // View has been resized;\n        // Compute the view's origins (x, y), a day's dimensions and left margin.\n        function updateCoordinates() {\n          var domRect, dayDimensions;\n\n          domRect = scrollView.getBoundingClientRect();\n          dayDimensions = getDayDimensions(domRect.left);\n\n          angular.extend(view, {\n            coordinates: {\n              x: domRect.left,\n              y: domRect.top\n            },\n            dayHeight: dayDimensions.height,\n            dayWidth: dayDimensions.width,\n            daysOffset: dayDimensions.offset.left,\n            topOffset: dayDimensions.offset.top\n          });\n        }\n\n        function onDragStart() {\n          element.on('mouseover', updateFromPointerHandler);\n          updateFromPointerHandler();\n        }\n\n        function onDragEnd() {\n          element.off('mouseover', updateFromPointerHandler);\n          Calendar.$view = null;\n        }\n\n        // From SOGoScrollController.updateFromPointerHandler\n        function updateFromPointerHandler() {\n          var scrollStep, pointerHandler, pointerCoordinates, now, scrollY, minY, delta;\n\n          pointerHandler = Component.$ghost.pointerHandler;\n          if (view && pointerHandler) {\n            scrollStep = view.scrollStep;\n            pointerCoordinates = pointerHandler.getContainerBasedCoordinates(view);\n\n            if (pointerCoordinates) {\n              // Pointer is inside view; Adjust scrollbar if necessary\n              Calendar.$view = view;\n              now = new Date().getTime();\n              if (!lastScroll || now > lastScroll + 100) {\n                lastScroll = now;\n                scrollY = pointerCoordinates.y - scrollStep;\n                if (scrollY < 0) {\n                  minY = -scrollView.scrollTop;\n                  if (scrollY < minY)\n                    scrollY = minY;\n                  scrollView.scrollTop += scrollY;\n                }\n                else {\n                  scrollY = pointerCoordinates.y + scrollStep;\n                  delta = scrollY - scrollView.clientHeight;\n                  if (delta > 0) {\n                    scrollView.scrollTop += delta;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  sgCalendarScrollViewController.$inject = ['$scope'];\n  function sgCalendarScrollViewController($scope) {\n    // Expose the view type to the controller\n    // See sgCalendarDayBlockGhost\n    this.type = $scope.type;\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarScrollView', sgCalendarScrollView);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   <sg-calendar-day-table\n       sg-blocks=\"calendar.blocks\"\n       sg-day=\"20150330\"\n       sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  function sgCalendarTable() {\n    return {\n      restrict: 'E',\n      scope: {\n        calendars: '=sgCalendars',\n        calendar: '@sgCalendar',\n        blocksType: '@sgBlocksType',\n        day: '@sgDay',\n        clickBlock: '&sgClick'\n      },\n      template: [\n        '<sg-calendar-day-table',\n        '  sg-blocks=\"calendars[calendar][blocksType]\"',\n        '  sg-day=\"day\"',\n        '  sg-click=\"clickBlock({event: clickEvent, component: clickComponent})\"/>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCalendarTable', sgCalendarTable);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  /* jshint validthis: true */\n  'use strict';\n\n  /*\n   * sgCategoryStylesheet - Add CSS stylesheet for a category's color\n   * @memberof SOGo.SchedulerUI\n   * @restrict attribute\n   * @param {object} ngModel - the object literal describing the category\n   * @example:\n\n    <sg-category-stylesheet\n         ng-repeat=\"category in categories\"\n         ng-model=\"category\" />\n  */\n  function sgCategoryStylesheet() {\n    return {\n      restrict: 'E',\n      require: 'ngModel',\n      scope: {\n        ngModel: '='\n      },\n      replace: true,\n      template: [\n        '<style type=\"text/css\">',\n        /* Background color */\n        '  .bg-category{{ ngModel.id }} {',\n        '    background-color: {{ ngModel.color }} !important;',\n        '  }',\n        /* Border color */\n        '  .bdr-category{{ ngModel.id }} {',\n        '    border-color: {{ ngModel.color }} !important;',\n        '  }',\n        '</style>'\n      ].join('')\n    };\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgCategoryStylesheet', sgCategoryStylesheet);\n})();\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgDraggableCalendarBlock - Make an element draggable\n   * @memberof SOGo.SchedulerUI\n   * @restrict class or attribute\n   *\n   * @example:\n\n   <div class=\"sg-draggable-calendar-block\"/>\n  */\n  sgDraggableCalendarBlock.$inject = ['$rootScope', '$timeout', '$log', 'Preferences', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDraggableCalendarBlock($rootScope, $timeout, $log, Preferences, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      require: '^sgCalendarDay',\n      link: link\n    };\n\n    function link(scope, element, attrs, calendarDayCtrl) {\n      if (scope.block) {\n        if (scope.block.component.editable) {\n          // Add dragging grips to existing event block\n          initGrips();\n        }\n        else {\n          element.removeClass('sg-draggable-calendar-block');\n          return;\n        }\n      }\n\n      // Start dragging on mousedown\n      element.on('mousedown', onDragDetect);\n\n      // Deregister listeners when removing the element from the DOM\n      scope.$on('$destroy', function() {\n        element.off('mousedown', onDragDetect);\n        element.off('mousemove', onDrag);\n      });\n\n      function initGrips() {\n        var component, dayIndex, blockIndex, isFirstBlock, isLastBlock,\n            dragGrip, leftGrip, rightGrip, topGrip, bottomGrip;\n\n        component = scope.block.component;\n        dayIndex = scope.block.dayIndex;\n        blockIndex = _.findIndex(component.blocks, ['dayIndex', dayIndex]);\n        isFirstBlock = (blockIndex === 0);\n        isLastBlock = (blockIndex === component.blocks.length - 1);\n\n        dragGrip = angular.element('<div class=\"dragGrip\"></div>');\n        dragGrip.addClass('bdr-folder' + component.pid);\n\n        if (component.c_isallday ||\n            element[0].parentNode.tagName === 'SG-CALENDAR-MONTH-DAY') {\n          if (isFirstBlock) {\n            leftGrip = angular.element('<div class=\"dragGrip-left\"></div>').append(dragGrip);\n            element.append(leftGrip);\n          }\n          if (isLastBlock) {\n            rightGrip = angular.element('<div class=\"dragGrip-right\"></div>').append(dragGrip.clone());\n            element.append(rightGrip);\n          }\n        }\n        else {\n          if (isFirstBlock) {\n            topGrip = angular.element('<div class=\"dragGrip-top\"></div>').append(dragGrip);\n            element.append(topGrip);\n          }\n          if (isLastBlock) {\n            bottomGrip = angular.element('<div class=\"dragGrip-bottom\"></div>').append(dragGrip.clone());\n            element.append(bottomGrip);\n          }\n        }\n      }\n\n      function onDragDetect(ev) {\n        var dragMode, pointerHandler;\n\n        ev.stopPropagation();\n\n        dragMode = 'move-event';\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          if (ev.target.className == 'dragGrip-top' ||\n              ev.target.className == 'dragGrip-left')\n            dragMode = 'change-start';\n          else if (ev.target.className == 'dragGrip-bottom' ||\n                   ev.target.className == 'dragGrip-right' )\n            dragMode = 'change-end';\n        }\n        else {\n          // Create new component from dragging\n          dragMode = 'change-end';\n        }\n\n        // Initialize pointer handler\n        pointerHandler = new SOGoEventDragPointerHandler(dragMode);\n        pointerHandler.initFromEvent(ev);\n\n        // Update Component.$ghost\n        Component.$ghost.pointerHandler = pointerHandler;\n\n        // Stop dragging on the next \"mouseup\"\n        angular.element(document).one('mouseup', onDragEnd);\n\n        // Listen to mousemove and start dragging when mouse has moved from at least 3 pixels\n        angular.element(document).on('mousemove', onDrag);\n      }\n\n      function dragStart(ev) {\n        var block, eventType, isHourCell, isMonthly, startDate, newData, newComponent, pointerHandler, calendarData;\n\n        isHourCell = element.hasClass('clickableHourCell');\n        isMonthly = (element[0].parentNode.tagName == 'SG-CALENDAR-MONTH-DAY') ||\n          element.hasClass('clickableDayCell');\n\n        calendarData = calendarDayCtrl.calendarData();\n\n        if (scope.block && scope.block.component) {\n          // Move or resize existing component\n          block = scope.block;\n        }\n        else {\n          // Create new component from dragging\n          startDate = calendarDayCtrl.dayString.parseDate(Preferences.$mdDateLocaleProvider, '%Y-%m-%e');\n          newData = {\n            type: 'appointment',\n            pid: calendarData? calendarData.pid : Calendar.$defaultCalendar(),\n            summary: l('New Event'),\n            startDate: startDate,\n            isAllDay: isHourCell? 0 : 1\n          };\n          newComponent = new Component(newData);\n          block = {\n            component: newComponent,\n            dayNumber: calendarDayCtrl.dayNumber,\n            length: 0\n          };\n          block.component.blocks = [block];\n        }\n\n        // Determine event type\n        eventType = 'multiday';\n        if (isMonthly)\n          eventType = 'monthly';\n        else if (block.component.c_isallday)\n          eventType = 'multiday-allday';\n\n        // Mark all blocks as being dragged\n        _.forEach(block.component.blocks, function(b) {\n          b.dragging = true;\n        });\n\n        // Update pointer handler\n        pointerHandler = Component.$ghost.pointerHandler;\n        pointerHandler.prepareWithEventType(eventType);\n        pointerHandler.initFromBlock(block);\n        if (calendarData)\n          // When the day is associated to a calendar, the day number becomes the calendar index\n          // among the active calendars\n          pointerHandler.initFromCalendar(calendarData);\n\n        // Update Component.$ghost\n        Component.$ghost.component = block.component;\n\n        $log.debug('emit calendar:dragstart ' + eventType);\n        $rootScope.$emit('calendar:dragstart');\n      }\n\n      function onDrag(ev) {\n        var pointerHandler = Component.$ghost.pointerHandler;\n\n        // Update\n        // - currentCoordinates\n        // - currentViewCoordinates\n        // - currentEventCoordinates\n        $timeout(function() {\n          pointerHandler.updateFromEvent(ev);\n        });\n      }\n\n      function onDragEnd(ev) {\n        var block, pointer;\n\n        block = scope.block;\n        pointer = Component.$ghost.pointerHandler;\n\n        // Deregister mouse events\n        angular.element(document).off('mousemove', onDrag);\n\n        if (pointer.dragHasStarted) {\n          $rootScope.$emit('calendar:dragend');\n          pointer.dragHasStarted = false;\n        }\n\n        // Unmark all blocks as being dragged\n        if (block && block.component)\n          _.forEach(block.component.blocks, function(b) {\n            b.dragging = false;\n          });\n      }\n\n      /**\n       * SOGoCoordinates\n       */\n      function SOGoCoordinates() {\n      }\n\n      SOGoCoordinates.prototype = {\n        x: -1,\n        y: -1,\n\n        getDelta: function SC_getDelta(otherCoordinates) {\n          var delta = new SOGoCoordinates();\n          delta.x = this.x - otherCoordinates.x;\n          delta.y = this.y - otherCoordinates.y;\n\n          if (Calendar.$view) {\n            delta.days = Calendar.$view.dayNumbers[this.x] - Calendar.$view.dayNumbers[otherCoordinates.x];\n          }\n\n          return delta;\n        },\n\n        getDistance: function SC_getDistance(otherCoordinates) {\n          var delta = this.getDelta(otherCoordinates);\n\n          return Math.sqrt(delta.x * delta.x + delta.y * delta.y);\n        },\n\n        clone: function SC_clone() {\n          var coordinates = new SOGoCoordinates();\n          coordinates.x = this.x;\n          coordinates.y = this.y;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragEventCoordinates\n       */\n      function SOGoEventDragEventCoordinates(eventType) {\n        this.setEventType(eventType);\n      }\n\n      SOGoEventDragEventCoordinates.prototype = {\n        dayNumber: -1,\n        weekDay: -1,\n        start: -1,\n        duration: -1,\n\n        eventType: null,\n\n        setEventType: function(eventType) {\n          this.eventType = eventType;\n        },\n\n        initFromBlock: function(block) {\n          var prevDayNumber = -1;\n\n          if (this.eventType === 'monthly') {\n            this.start = 0;\n            this.duration = block.component.blocks.length * CalendarSettings.EventDragDayLength;\n          }\n          else {\n            // Get the start (first quarter) from the event's first block\n            // Compute overall length\n            this.start = block.component.blocks[0].start;\n            this.duration = _.sumBy(block.component.blocks, function(b) {\n              var delta, currentDayNumber;\n\n              currentDayNumber = b.dayNumber;\n              if (prevDayNumber < 0)\n                delta = 0;\n              else\n                delta = currentDayNumber - prevDayNumber - 1;\n              prevDayNumber = currentDayNumber;\n\n              return b.length + delta * CalendarSettings.EventDragDayLength;\n            });\n          }\n        },\n\n        initFromCalendar: function(calendarNumber) {\n          this.dayNumber = calendarNumber;\n        },\n\n        getDelta: function(otherCoordinates) {\n          var delta = new SOGoEventDragEventCoordinates();\n          delta.dayNumber = (this.dayNumber - otherCoordinates.dayNumber);\n          delta.start = (this.start - otherCoordinates.start);\n          delta.duration = (this.duration - otherCoordinates.duration);\n\n          return delta;\n        },\n\n        _quartersToHM: function(quarters) {\n          var minutes = quarters * 15;\n          var hours = Math.floor(minutes / 60);\n          if (hours < 10)\n            hours = \"0\" + hours;\n          var mins = minutes % 60;\n          if (mins < 10)\n            mins = \"0\" + mins;\n\n          return \"\" + hours + \":\" + mins;\n        },\n\n        getStartTime: function() {\n          return this._quartersToHM(this.start);\n        },\n\n        getEndTime: function() {\n          var end = (this.start + this.duration) % CalendarSettings.EventDragDayLength;\n          return this._quartersToHM(end);\n        },\n\n        clone: function() {\n          var coordinates = new SOGoEventDragEventCoordinates();\n          coordinates.dayNumber = this.dayNumber;\n          coordinates.start = this.start;\n          coordinates.duration = this.duration;\n\n          return coordinates;\n        }\n      };\n\n      /**\n       * SOGoEventDragPointerHandler\n       */\n      function SOGoEventDragPointerHandler(dragMode) {\n        this.dragMode = dragMode;\n      }\n\n      SOGoEventDragPointerHandler.prototype = {\n        // Pointer absolute xy coordinates within page\n        originalCoordinates: null,\n        currentCoordinates: null,\n\n        // Pointer relative xy coordinates within view (row-column)\n        originalViewCoordinates: null,\n        currentViewCoordinates: null,\n\n        // Event start-duration coordinates\n        originalEventCoordinates: null,\n        currentEventCoordinates: null,\n\n        originalCalendar: null,\n\n        dragHasStarted: false,\n\n        // Function to return the day and quarter coordinates of the pointer cursor\n        // within the day view\n        getEventViewCoordinates: null,\n\n        initFromBlock: function SEDPH_initFromBlock(block) {\n          this.currentEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates = new SOGoEventDragEventCoordinates(this.eventType);\n          this.originalEventCoordinates.initFromBlock(block);\n        },\n\n        initFromEvent: function SEDPH_initFromEvent(event) {\n          this.currentCoordinates = new SOGoCoordinates();\n          this.updateFromEvent(event);\n          this.originalCoordinates = this.currentCoordinates.clone();\n        },\n\n        initFromCalendar: function SEDPH_initFromCalendar(calendarData) {\n          this.originalCalendar = calendarData;\n          this.currentEventCoordinates.initFromCalendar(calendarData.index);\n          this.originalEventCoordinates.initFromCalendar(calendarData.index);\n        },\n\n        // Method continuously called while dragging\n        updateFromEvent: function SEDPH_updateFromEvent(event) {\n          // Event here is a DOM event, not a calendar event!\n          this.currentCoordinates.x = event.pageX;\n          this.currentCoordinates.y = event.pageY;\n\n          // From SOGoEventDragGhostController.updateFromPointerHandler\n          if (this.dragHasStarted && Calendar.$view) {\n            var newEventCoordinates = this.getEventViewCoordinates(Calendar.$view);\n            if (!this.originalViewCoordinates) {\n              this.originalViewCoordinates = this.getEventViewCoordinates(Calendar.$view, this.originalCoordinates);\n              if (Component.$ghost.component.isNew) {\n                this.setTimeFromQuarters(Component.$ghost.component.start, this.originalViewCoordinates.y);\n                $log.debug('new event start date ' + Component.$ghost.component.start);\n              }\n            }\n            if (!this.currentViewCoordinates ||\n                !newEventCoordinates ||\n                newEventCoordinates.x != this.currentViewCoordinates.x ||\n                newEventCoordinates.y != this.currentViewCoordinates.y) {\n              this.currentViewCoordinates = newEventCoordinates;\n              if (this.originalViewCoordinates) {\n                if (!newEventCoordinates) {\n                  this.currentViewCoordinates = this.originalViewCoordinates.clone();\n                }\n                this.updateEventCoordinates();\n              }\n            }\n          }\n          else if (this.originalCoordinates &&\n                   this.currentCoordinates &&\n                   !this.dragHasStarted) {\n            var distance = this.getDistance();\n            if (distance > 3) {\n              this.dragHasStarted = true;\n              dragStart(event);\n            }\n          }\n        },\n\n        // SOGoEventDragGhostController._updateCoordinates\n        // Extend this.currentCoordinates with start, dayNumber and duration\n        updateEventCoordinates: function SEDGC__updateCoordinates() {\n          var newDuration;\n\n          // Compute delta wrt to position of mouse at dragstart on the day/quarter grid\n          var delta = this.currentViewCoordinates.getDelta(this.originalViewCoordinates);\n          var deltaQuarters = delta.days * CalendarSettings.EventDragDayLength + delta.y;\n          $log.debug('quarters delta ' + deltaQuarters);\n\n          if (angular.isUndefined(this.originalEventCoordinates.start)) {\n            // Creating new appointment from DnD\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[this.originalViewCoordinates.x];\n            this.originalEventCoordinates.start = this.originalViewCoordinates.y;\n          }\n          else if (this.originalEventCoordinates.dayNumber < 0) {\n            this.originalEventCoordinates.dayNumber = Calendar.$view.dayNumbers[scope.block.component.blocks[0].dayIndex];\n          }\n          // if (currentView == \"multicolumndayview\")\n          //   this._updateMulticolumnViewDayNumber_SEDGC();\n          // else\n          this.currentEventCoordinates.dayNumber = this.originalEventCoordinates.dayNumber;\n\n          if (this.dragMode == \"move-event\") {\n            this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n            this.currentEventCoordinates.duration = this.originalEventCoordinates.duration;\n          }\n          else {\n            if (this.dragMode == \"change-start\") {\n              newDuration = this.originalEventCoordinates.duration - deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + deltaQuarters;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = (this.originalEventCoordinates.start + this.originalEventCoordinates.duration);\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n            else if (this.dragMode == \"change-end\") {\n              newDuration = this.originalEventCoordinates.duration + deltaQuarters;\n              if (newDuration > 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start;\n                this.currentEventCoordinates.duration = newDuration;\n              }\n              else if (newDuration < 0) {\n                this.currentEventCoordinates.start = this.originalEventCoordinates.start + newDuration;\n                this.currentEventCoordinates.duration = -newDuration;\n              }\n            }\n          }\n\n          var deltaDays;\n          if (this.currentEventCoordinates.start < 0) {\n            deltaDays = Math.ceil(-this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start += deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber -= deltaDays;\n          }\n          else if (this.currentEventCoordinates.start >= CalendarSettings.EventDragDayLength) {\n            deltaDays = Math.floor(this.currentEventCoordinates.start / CalendarSettings.EventDragDayLength);\n            this.currentEventCoordinates.start -= deltaDays * CalendarSettings.EventDragDayLength;\n            this.currentEventCoordinates.dayNumber += deltaDays;\n          }\n\n          $log.debug('event coordinates ' + JSON.stringify(this.currentEventCoordinates));\n          $rootScope.$emit('calendar:drag');\n        },\n\n        // SOGoEventDragPointerHandler.getContainerBasedCoordinates\n        getContainerBasedCoordinates: function SEDPH_getCBC(view, pointerCoordinates) {\n          var currentCoordinates = pointerCoordinates || this.currentCoordinates;\n          var coordinates = currentCoordinates.getDelta(view.coordinates);\n          var container = view.element;\n\n          if (coordinates.x < view.daysOffset || coordinates.x > container.clientWidth ||\n              coordinates.y < 0 || coordinates.y > container.clientHeight)\n            coordinates = null;\n\n          return coordinates;\n        },\n\n        prepareWithEventType: function SEDPH_prepareWithEventType(eventType) {\n          var methods = { \"multiday\": this.getEventMultiDayViewCoordinates,\n                          \"multiday-allday\": this.getEventMultiDayAllDayViewCoordinates,\n                          \"monthly\": this.getEventMonthlyViewCoordinates,\n                          \"unknown\": null };\n          var method = methods[eventType];\n          this.eventType = eventType;\n          this.getEventViewCoordinates = method;\n        },\n\n        getEventMultiDayViewCoordinates: function SEDPH_gEMultiDayViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates = this.getEventMultiDayAllDayViewCoordinates(view, pointerCoordinates); // get the x coordinate\n          if (coordinates) {\n            var quarterHeight = view.quarterHeight;\n            var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n            pxCoordinates.y += view.element.scrollTop;\n\n            coordinates.y = Math.floor((pxCoordinates.y - CalendarSettings.EventDragHorizontalOffset) / quarterHeight);\n            var maxY = CalendarSettings.EventDragDayLength - 1;\n            if (coordinates.y < 0)\n              coordinates.y = 0;\n            else if (coordinates.y > maxY)\n              coordinates.y = maxY;\n          }\n\n          return coordinates;\n        },\n        getEventMultiDayAllDayViewCoordinates: function SEDPH_gEMultiDayADVC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            var minX = 0;\n            var maxX = Calendar.$view.maxX;\n            if (this.dragMode != 'move-event') {\n              var calendarData = calendarDayCtrl.calendarData();\n              if (calendarData)\n                // Resizing an event can't span a different day when in multicolumn view\n                minX = maxX = calendarData.index;\n            }\n            if (coordinates.x < minX)\n              coordinates.x = minX;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n        getEventMonthlyViewCoordinates: function SEDPH_gEMonthlyViewC(view, pointerCoordinates) {\n          /* x = day; y = quarter */\n          var coordinates;\n\n          var pxCoordinates = this.getContainerBasedCoordinates(view, pointerCoordinates);\n          if (pxCoordinates) {\n            coordinates = new SOGoCoordinates();\n\n            var maxX = view.maxX;\n            var daysTopOffset = 0;\n            var dayWidth = view.dayWidth;\n            var daysOffset = view.daysOffset;\n            var dayHeight = view.dayHeight;\n            var daysY = Math.floor((pxCoordinates.y - daysTopOffset) / dayHeight);\n            if (daysY < 0)\n              daysY = 0;\n\n            coordinates.x = Math.floor((pxCoordinates.x - daysOffset) / dayWidth);\n            if (coordinates.x < 0)\n              coordinates.x = 0;\n            else if (coordinates.x > maxX)\n              coordinates.x = maxX;\n            coordinates.x += (maxX + 1) * daysY;\n            coordinates.y = 0;\n          }\n          else {\n            coordinates = null;\n          }\n\n          return coordinates;\n        },\n\n        getDistance: function SEDPH_getDistance() {\n          return this.currentCoordinates.getDistance(this.originalCoordinates);\n        },\n\n        setTimeFromQuarters: function SEDPH_setTimeFromQuarters(date, quarters) {\n          var hours, minutes;\n          hours = Math.floor(quarters / 4);\n          minutes = (quarters % 4) * 15;\n          date.setHours(hours, minutes);\n        }\n      };\n    }\n  }\n\n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDraggableCalendarBlock', sgDraggableCalendarBlock);\n})();\n\n","/* -*- Mode: javascript; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n(function() {\n  'use strict';\n\n  /*\n   * sgCalendarDayTable - Build list of blocks for a specific day\n   * @memberof SOGo.Common\n   * @restrict element\n   * @param {object} sgBlocks - the events blocks definitions for the current view\n   * @param {string} sgDay - the day of the events to display\n   * @param {function} sgClick - the function to call when clicking on a block.\n   *        Two variables are available: event (the event that triggered the mouse click),\n   *        and component (a Component object)\n   *\n   * @example:\n\n   http://www.html5rocks.com/en/tutorials/dnd/basics/\n   https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Drag_and_drop\n\n   <sg-calendar-day-table\n   sg-blocks=\"calendar.blocks\"\n   sg-day=\"20150330\"\n   sg-click=\"open({ event: clickEvent, component: clickComponent })\"/>\n  */\n  sgDroppableBlock.$inject = ['$rootScope', '$timeout', '$mdGesture', 'Calendar', 'CalendarSettings', 'Component'];\n  function sgDroppableBlock($rootScope, $timeout, $mdGesture, Calendar, CalendarSettings, Component) {\n    return {\n      restrict: 'CA',\n      scope: {\n        onDrop: '&sgOnDrop'\n      },\n      link: function (scope, element, attrs, controller) {\n        var deregister = $rootScope.$on('calendar:dragend', scope.onDrop);\n        scope.$on('$destroy', deregister);\n      }\n    };\n  }\n  \n  angular\n    .module('SOGo.SchedulerUI')\n    .directive('sgDroppableBlock', sgDroppableBlock);\n})();\n\n"]}